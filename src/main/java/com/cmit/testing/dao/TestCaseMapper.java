package com.cmit.testing.dao;

import com.cmit.testing.entity.TestCase;
import com.cmit.testing.entity.vo.PbtVO;
import com.cmit.testing.entity.vo.TestCaseReportVO;
import org.apache.ibatis.annotations.Mapper;
import org.apache.ibatis.annotations.Param;
import org.bytedeco.javacpp.presets.opencv_core;

import java.util.List;
import java.util.Map;

@Mapper
public interface TestCaseMapper extends BaseMapper<TestCase>{
    /*
    *批量更新用例依赖
    * */
    int batchUpdateTestCase(List<TestCase> list);
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table testcase
     *
     * @mbggenerated
     */
    int deleteByPrimaryKey(Integer id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table testcase
     *
     * @mbggenerated
     */
    int insert(TestCase record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table testcase
     *
     * @mbggenerated
     */
    int insertSelective(TestCase record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table testcase
     *
     * @mbggenerated
     */
    TestCase selectByPrimaryKey(Integer id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table testcase
     *
     * @mbggenerated
     */
    int updateByPrimaryKeySelective(TestCase record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table testcase
     *
     * @mbggenerated
     */
    int updateByPrimaryKey(TestCase record);

    Map<String,Integer> getTestCaseMaxExcuteNum(@Param("id") Integer id);

    /**
     * 分页
     * @param name 用户名
     * @return
     */
    List<PbtVO> findByPage(@Param("name") String name, @Param("businessId") Integer businessId);

    /**
     * 根据条件查询
     */
    List<TestCase> getListByTestCase(TestCase testCase);

    /**
     * 根据ids查询
     */
    List<TestCase> getTestCaseByIds(@Param("ids") List<Integer> ids);

    /**
     * 批量删除
     * @param ids
     * @return
     */
    int deleteByIds(@Param("ids") List<Integer> ids);

    /**
     * 用例数据统计
     * @return     用例数据统计（casenum：用例总数，noexecute：未执行，executing：执行中，executed：已执行
     */
    Map<String,Long> testCaseCount();

    /**
     * 统计业务下用例的成功数与失败数
     * @param businessId
     * @return
     */
    Map<String,Long> testCaseCountNumber(@Param("businessId") Integer businessId);

    /**
     * 根据任务id查询用例
     * @param id
     * @return
     */
    List<TestCase> getTestCaseByTaskId(@Param("id") Integer id);
    
    /**
     * 通过业务查询用例
     * @param testCase
     * @return
     */
    List<TestCase> selectTastCaseTive(TestCase testCase);


    /**
     * 获取批次号
     * @param id
     * @return
     */
    List<Long> getExcuteNumById(@Param("id") Integer id);

    /**
     * 根据id查询该id最后批次的用例
      * @param id
     * @return
     */
    TestCase getTestCaseByCaseId(@Param("id") Integer id);

    /**
     * 根据模板id查找副本id
     * @param ids
     * @return
     */
    List<Integer> getIdsByOldIds(@Param("ids") List<Integer> ids);


    /**
     * 根据依赖的id查
     * @param ids
     * @return
     */
    List<Integer> getIdsByFollowId(@Param("ids") List<Integer> ids);

    /**
     * 根据任务id及用例id查询用例
     * @param surveyTaskId
     * @param id
     * @return
     */
    List<TestCase> getTestCaseBySurTaskIdAndCaseId(@Param("surveyTaskId") Integer surveyTaskId, @Param("id") Integer id);


    /**
     * 根据用例Id查询出最大执行次数
     */
    Integer getMaxExcuteNum();

    /**
     * 查询执行中的用例
     * @return
     */
    List<TestCase> getAllExecutingCase(TestCaseReportVO testCaseReportVO);

    /**
     * 根据执行类型查询用例父模板
     * @param executionType 执行类型 0立即执行，1指定时间执行，2指定周期执行，3不执行
     * @return
     */
    List<TestCase> getTestCaseByExeType(@Param("executionType") Integer executionType);

    /**
     * 判断当前项目下用例编号是否重复（除当前用例本身外）
     * @param projectId 项目id
     * @param id 用例id
     * @param serialNumber 编号
     * @return 返回值是用例id集合
     */
    List<Integer> getSerialNumber(@Param("projectId") Integer projectId, @Param("id") Integer id, @Param("serialNumber") String serialNumber);

    /**
     * 获取业务下正在执行的用例数
     * @param businessId
     * @return
     */
    Integer getExecutingCountByBusiness(@Param("businessId") Integer businessId);

    /**
	 * 根据原用例id和任务id获取用例副本
	 * @param oldTestcaseId 原用例id
	 * @param surveyTaskId 任务id
	 * @return
	 */
	List<TestCase> getTestCasesByOldTestcaseIdAndSysTaskId(@Param("oldTestcaseId") Integer oldTestcaseId, @Param("sysTaskId") Integer sysTaskId);
}