<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.cmit.testing.dao.MessageMapper" >
  <resultMap id="BaseResultMap" type="com.cmit.testing.entity.Message" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="imsi" property="imsi" jdbcType="VARCHAR" />
    <result column="phone" property="phone" jdbcType="VARCHAR" />
    <result column="type" property="type" jdbcType="INTEGER" />
    <result column="content" property="content" jdbcType="VARCHAR" />
    <result column="receivetime" property="receivetime" jdbcType="TIMESTAMP" />
    <result column="sendtime" property="sendtime" jdbcType="TIMESTAMP" />
    <result column="othernumber" property="othernumber" jdbcType="VARCHAR" />
    <result column="receivedevicetype" property="receivedevicetype" jdbcType="VARCHAR" />
    <result column="equipmentid" property="equipmentid" jdbcType="INTEGER" />

  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="com.cmit.testing.entity.Message" extends="BaseResultMap" >
    <result column="content" property="content" jdbcType="LONGVARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, phone,imsi,type, content, receivetime, sendtime, othernumber,receivedevicetype,equipmentid
  </sql>
  <sql id="Blob_Column_List" >
    content
  </sql>
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Integer" >
    select
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from message
    where id = #{id,jdbcType=INTEGER}
  </select>
  <select id="selectBySmsVerifyCode" resultMap="ResultMapWithBLOBs">
    select
    <include refid="Base_Column_List" />
    from message where receivetime <![CDATA[ >= ]]> #{startTime} and receivetime <![CDATA[ <= ]]> #{endTime} and phone = #{phone,jdbcType=VARCHAR} and type = '1'
  </select>
  <select id="selectAll" resultMap="ResultMapWithBLOBs" >
    select
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from message
    ORDER BY id DESC
  </select>
  <select id="selectByBlurInfo" resultMap="ResultMapWithBLOBs" parameterType="com.cmit.testing.entity.Message" >
    select
    m.*
    ,s.province as province
    from message m
    inner join sim_card s on m.phone=s.phone
    <where>
      <if test="phone != null and phone != ''">
        AND m.phone LIKE CONCAT(CONCAT('%',#{phone},'%'))
      </if>
      <if test="province != null and province != ''">
        AND s.province LIKE CONCAT(CONCAT('%',#{province},'%'))
      </if>
      <if test="othernumber != null and othernumber != ''">
        AND m.othernumber LIKE CONCAT(CONCAT('%',#{othernumber},'%'))
      </if>
    </where>
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from message
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.cmit.testing.entity.Message" >
    insert into message (id, phone,imsi, type,
      content, receivetime, sendtime,othernumber,
      receivedevicetype, equipmentid)
    values (#{id,jdbcType=INTEGER}, #{phone,jdbcType=VARCHAR},#{imsi,jdbcType=VARCHAR}, #{type,jdbcType=INTEGER},
      #{content,jdbcType=LONGVARCHAR}, #{receivetime,jdbcType=TIMESTAMP}, #{sendtime,jdbcType=TIMESTAMP},
      #{othernumber,jdbcType=VARCHAR}, #{receivedevicetype,jdbcType=VARCHAR},#{equipmentid,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.cmit.testing.entity.Message" >
    insert into message
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="phone != null" >
        phone,
      </if>
      <if test="imsi != null">
        imsi,
      </if>
      <if test="type != null" >
        type,
      </if>
      <if test="content != null" >
        content,
      </if>
      <if test="receivetime != null" >
        receivetime,
      </if>
      <if test="sendtime != null" >
        sendtime,
      </if>
      <if test="othernumber != null" >
        othernumber,
      </if>
      <if test="receivedevicetype != null" >
        receivedevicetype,
      </if>
      <if test="equipmentid != null" >
        equipmentid,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="phone != null" >
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="imsi != null" >
        #{imsi,jdbcType=VARCHAR},
      </if>
      <if test="type != null" >
        #{type,jdbcType=INTEGER},
      </if>
      <if test="content != null" >
        #{content,jdbcType=LONGVARCHAR},
      </if>
      <if test="receivetime != null" >
        #{receivetime,jdbcType=TIMESTAMP},
      </if>
      <if test="sendtime != null" >
        #{sendtime,jdbcType=TIMESTAMP},
      </if>
      <if test="othernumber != null" >
        #{othernumber,jdbcType=VARCHAR},
      </if>
      <if test="receivedevicetype != null" >
        #{receivedevicetype,jdbcType=VARCHAR},
      </if>
      <if test="equipmentid != null" >
        #{equipmentid,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.cmit.testing.entity.Message" >
    update message
    <set >
      <if test="phone != null" >
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="imsi != null" >
        #{imsi,jdbcType=VARCHAR},
      </if>
      <if test="type != null" >
        #{type,jdbcType=INTEGER},
      </if>
      <if test="content != null" >
        #{content,jdbcType=LONGVARCHAR},
      </if>
      <if test="receivetime != null" >
        #{receivetime,jdbcType=TIMESTAMP},
      </if>
      <if test="sendtime != null" >
        #{sendtime,jdbcType=TIMESTAMP},
      </if>
      <if test="othernumber != null" >
        #{othernumber,jdbcType=VARCHAR},
      </if>
      <if test="receivedevicetype != null" >
        #{receivedevicetype,jdbcType=VARCHAR},
      </if>
      <if test="equipmentid != null" >
        #{equipmentid,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.cmit.testing.entity.Message" >
    update message
    set phone = #{phone,jdbcType=VARCHAR},
      imsi = #{imsi,jdbcType=VARCHAR},
      type = #{type,jdbcType=INTEGER},
      content = #{content,jdbcType=LONGVARCHAR},
      receivetime = #{receivetime,jdbcType=TIMESTAMP},
      sendtime = #{sendtime,jdbcType=TIMESTAMP},
      othernumber = #{othernumber,jdbcType=VARCHAR},
      receivedevicetype = #{receivedevicetype,jdbcType=VARCHAR},
      equipmentid = #{equipmentid,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.cmit.testing.entity.Message" >
    update message
    set phone = #{phone,jdbcType=VARCHAR},
      imsi = #{imsi,jdbcType=VARCHAR},
      type = #{type,jdbcType=INTEGER},
      receivetime = #{receivetime,jdbcType=TIMESTAMP},
      sendtime = #{sendtime,jdbcType=TIMESTAMP},
      othernumber = #{othernumber,jdbcType=VARCHAR},
      receivedevicetype = #{receivedevicetype,jdbcType=VARCHAR},
      equipmentid = #{equipmentid,jdbcType=INTEGER}
      where id = #{id,jdbcType=INTEGER}
  </update>

  <select id="findByPage"  resultType="com.cmit.testing.entity.Message">
    select DISTINCT m.*,s.province AS province,e.port_name AS portName from message m,sim_card s,sim_equipment e where m.phone=s.phone and m.imsi=e.imsi
    <if test="phone != null and phone != ''">
      AND m.phone LIKE CONCAT('%', #{phone }, '%')
    </if>
    <if test="province != null and province != ''">
      AND s.province LIKE CONCAT('%', #{province }, '%')
    </if>
    <if test="portName != null and portName != ''">
      AND e.port_name LIKE CONCAT('%', #{portName }, '%')
    </if>
    ORDER BY id DESC
  </select>
</mapper>