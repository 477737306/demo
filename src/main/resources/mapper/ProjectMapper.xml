<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.cmit.testing.dao.ProjectMapper" >
  <resultMap id="BaseResultMap" type="com.cmit.testing.entity.Project" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="status" property="status" jdbcType="INTEGER" />
    <result column="enable" property="enable" jdbcType="INTEGER" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="create_by" property="createBy" jdbcType="VARCHAR" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
    <result column="update_by" property="updateBy" jdbcType="VARCHAR" />
    <result column="success_num" property="successNum" jdbcType="INTEGER" />
    <result column="failure_num" property="failureNum" jdbcType="INTEGER" />
    <result column="success_rate" property="successRate" jdbcType="DOUBLE" />
    <result column="code" property="code" jdbcType="INTEGER" />
    <result column="is_finish" property="isFinish" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, name, status, enable, create_time, create_by, update_time, update_by, success_num, 
    failure_num, success_rate, code, is_finish
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from project
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from project
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.cmit.testing.entity.Project" useGeneratedKeys="true" keyProperty="id">
    insert into project (id, name, status, 
      enable, create_time, create_by, 
      update_time, update_by, success_num, 
      failure_num, success_rate, code, 
      is_finish)
    values (#{id,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{status,jdbcType=INTEGER}, 
      #{enable,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}, #{createBy,jdbcType=VARCHAR}, 
      #{updateTime,jdbcType=TIMESTAMP}, #{updateBy,jdbcType=VARCHAR}, #{successNum,jdbcType=INTEGER}, 
      #{failureNum,jdbcType=INTEGER}, #{successRate,jdbcType=DOUBLE}, #{code,jdbcType=INTEGER}, 
      #{isFinish,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.cmit.testing.entity.Project" useGeneratedKeys="true" keyProperty="id" >
    insert into project
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="name != null" >
        name,
      </if>
      <if test="status != null" >
        status,
      </if>
      <if test="enable != null" >
        enable,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="createBy != null" >
        create_by,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
      <if test="updateBy != null" >
        update_by,
      </if>
      <if test="successNum != null" >
        success_num,
      </if>
      <if test="failureNum != null" >
        failure_num,
      </if>
      <if test="successRate != null" >
        success_rate,
      </if>
      <if test="code != null" >
        code,
      </if>
      <if test="isFinish != null" >
        is_finish,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        #{status,jdbcType=INTEGER},
      </if>
      <if test="enable != null" >
        #{enable,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createBy != null" >
        #{createBy,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateBy != null" >
        #{updateBy,jdbcType=VARCHAR},
      </if>
      <if test="successNum != null" >
        #{successNum,jdbcType=INTEGER},
      </if>
      <if test="failureNum != null" >
        #{failureNum,jdbcType=INTEGER},
      </if>
      <if test="successRate != null" >
        #{successRate,jdbcType=DOUBLE},
      </if>
      <if test="code != null" >
        #{code,jdbcType=INTEGER},
      </if>
      <if test="isFinish != null" >
        #{isFinish,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.cmit.testing.entity.Project" >
    update project
    <set >
      <if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="enable != null" >
        enable = #{enable,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createBy != null" >
        create_by = #{createBy,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateBy != null" >
        update_by = #{updateBy,jdbcType=VARCHAR},
      </if>
      <if test="successNum != null" >
        success_num = #{successNum,jdbcType=INTEGER},
      </if>
      <if test="failureNum != null" >
        failure_num = #{failureNum,jdbcType=INTEGER},
      </if>
      <if test="successRate != null" >
        success_rate = #{successRate,jdbcType=DOUBLE},
      </if>
      <if test="code != null" >
        code = #{code,jdbcType=INTEGER},
      </if>
      <if test="isFinish != null" >
        is_finish = #{isFinish,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.cmit.testing.entity.Project" >
    update project
    set name = #{name,jdbcType=VARCHAR},
      status = #{status,jdbcType=INTEGER},
      enable = #{enable,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      create_by = #{createBy,jdbcType=VARCHAR},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      update_by = #{updateBy,jdbcType=VARCHAR},
      success_num = #{successNum,jdbcType=INTEGER},
      failure_num = #{failureNum,jdbcType=INTEGER},
      success_rate = #{successRate,jdbcType=DOUBLE},
      code = #{code,jdbcType=INTEGER},
      is_finish = #{isFinish,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>


  <select id="getProjectSum" resultType="java.lang.Integer">
    SELECT COUNT(1) FROM project
  </select>

  <select id="pbtFindByPage" resultType="com.cmit.testing.entity.vo.PbtVO">
    SELECT
    a.id,a.NAME,a.success_num AS successNum ,a.failure_num AS failureNum,a.success_rate AS successRate,a.update_time AS updateTime,a.code AS  code ,"project" AS tableFlag,a.is_finish AS isFinish,b.id AS menuId,a.create_time As createTime
    FROM
    project a LEFT JOIN sys_permission b ON a.id = b.data_id
    WHERE b.type= "project"
    <if test="name != null and name != ''">
      AND a.name like CONCAT('%', #{name }, '%')
    </if>     UNION
    SELECT
    a.id,a.NAME,a.success_num AS successNum ,a.failure_num AS failureNum,a.success_rate AS successRate,a.update_time AS updateTime,a.code AS  code ,"business" AS tableFlag,a.is_finish AS isFinish,b.id AS menuId,a.create_time As createTime
    FROM
    business a LEFT JOIN sys_permission b ON a.id = b.data_id
    WHERE b.type= "business"
    <if test="name != null and name != ''">
      AND a.name like CONCAT('%', #{name }, '%')
    </if>
    UNION
    SELECT
    a.id,a.NAME,a.success_num AS successNum ,a.failure_num AS failureNum,a.success_rate AS successRate,a.update_time AS updateTime,a.code AS  code ,"case" AS tableFlag,a.is_finish AS isFinish,b.id AS menuId,a.create_time As createTime

    FROM
    testcase a LEFT JOIN sys_permission b ON a.id = b.data_id
    WHERE a.old_testcase_id = 0 AND b.type= "case"
    <if test="name != null and name != ''">
      AND a.name like CONCAT('%', #{name }, '%')
    </if>
    UNION
    SELECT
    a.case_id As id,
    a.case_name As name,
    a.success_count AS successNum,
    a.failure_count AS failureNum,
    a.success_rate AS successRate,
    a.update_time AS updateTime,
    a.order_code AS code,
    "appCase" AS tableFlag,
    a.is_finish AS isFinish,
    b.id AS menuId,
    a.create_time As createTime
    FROM
    app_case AS a
    LEFT JOIN sys_permission b ON a.case_id = b.data_id
    WHERE
    b.type= "appCase"
    AND old_case_id = 0
    <if test="name != null and name != ''">
      AND c.case_name LIKE CONCAT('%', #{name}, '%')
    </if>
    ORDER BY field(tableFlag,'project','business','case','appCase','scripts','appScript'),code,name,createTime
  </select>


  <select id="getAllProject" resultType="com.cmit.testing.entity.Project">
    select <include refid="Base_Column_List" />
    from project
  </select>

  <select id="findByPage" resultType="com.cmit.testing.entity.vo.PbtVO" >
    select
    a.id,a.NAME,a.success_num AS successNum ,a.failure_num AS failureNum,a.success_rate AS successRate,a.update_time AS updateTime,a.code AS  code ,"project" AS tableFlag,a.is_finish AS isFinish,b.id AS menuId
    from project a
    LEFT JOIN sys_permission b ON a.id = b.data_id
    WHERE b.type= "project"
    <if test="name != null and name != ''">
      AND a.name like CONCAT('%', #{name }, '%')
    </if>
    ORDER BY a.code, a.name,a.create_time asc

  </select>

  <delete id="deleteByIds" parameterType="java.util.List" >
    delete from project
    where id IN
    <foreach item="id" collection="ids" open="(" close=")" separator=",">
      #{id,jdbcType=INTEGER}
    </foreach>
  </delete>

  <!--项目数据统计（projectnum：项目总数，noexecute：未执行，executing：执行中，executed：已执行，filed：已归档，unfiled：未归档-->
  <select id="projetCount" resultType="java.util.Map">
    SELECT
      count(0) AS projectnum,
      count(IF(is_finish = 0, TRUE, NULL)) AS noexecute,
      count(IF(is_finish = 1, TRUE, NULL)) AS executing,
      count(IF(is_finish = 2, TRUE, NULL)) AS executed,
      count(IF(enable = 0, TRUE, NULL)) AS filed,
      count(IF(enable = 1, TRUE, NULL)) AS unfiled
    FROM
      project
  </select>
</mapper>