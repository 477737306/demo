<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.cmit.testing.dao.ProductMapper">
    <resultMap id="BaseResultMap" type="com.cmit.testing.entity.Product">
        <id column="id" property="id" jdbcType="INTEGER"/>
        <result column="code" property="code" jdbcType="INTEGER"/>
        <result column="name" property="name" jdbcType="VARCHAR"/>
        <result column="province" property="province" jdbcType="INTEGER"/>
        <result column="create_time" property="createTime" jdbcType="TIMESTAMP"/>
        <result column="update_time" property="updateTime" jdbcType="TIMESTAMP"/>
    </resultMap>
    <sql id="Base_Column_List">
    id,code, name, province, create_time, update_time
  </sql>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String">
        select
        <include refid="Base_Column_List"/>
        from product
        where id = #{id,jdbcType=VARCHAR}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from product
    where id = #{id,jdbcType=VARCHAR}
  </delete>
    <insert id="insert" parameterType="com.cmit.testing.entity.Product">
    insert into product (id,code, name, province)
    values (#{id,jdbcType=VARCHAR},  #{code,jdbcType=VARCHAR},#{name,jdbcType=VARCHAR}, #{province,jdbcType=VARCHAR})
  </insert>
    <insert id="insertSelective" parameterType="com.cmit.testing.entity.Product" >
        insert into product
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="name != null">
                name,
            </if>
            <if test="province != null">
                province,
            </if>
            <if test="code != null">
                code,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=VARCHAR},
            </if>
            <if test="name != null">
                #{name,jdbcType=VARCHAR},
            </if>
            <if test="province != null">
                #{province,jdbcType=VARCHAR},
            </if>
            <if test="code != null">
                #{code,jdbcType=VARCHAR},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.cmit.testing.entity.Product">
        update product
        <set>
            <if test="name != null">
                name = #{name,jdbcType=VARCHAR},
            </if>
            <if test="province != null">
                #{province,jdbcType=VARCHAR},
            </if>
            <if test="code != null">
                code = #{code,jdbcType=VARCHAR},
            </if>
        </set>
        where id = #{id,jdbcType=VARCHAR}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.cmit.testing.entity.Product">
    update product
    set name = #{name,jdbcType=VARCHAR},
      code = #{code,jdbcType=VARCHAR},
      province=#{province,jdbcType=VARCHAR}
    where id = #{id,jdbcType=VARCHAR}
  </update>
    <select id="queryByProduct" resultMap="BaseResultMap" parameterType="com.cmit.testing.entity.Product">
        select  <include refid="Base_Column_List"/> from product
        where 1=1
        <if test="name!=null and name!=''">
            and name = #{name,jdbcType=VARCHAR}
        </if>
        <if test="province!=null and province!=''">
            and province=#{province,jdbcType=VARCHAR}
        </if>
        <if test="code!=null and code!=''">
            and code = #{code,jdbcType=VARCHAR}
        </if>
    </select>


    <select id="getProductNames" resultType="java.lang.String">
        select  DISTINCT(name) from product
        where 1=1
        <if test="name!=null and name!=''">
            and name LIKE  CONCAT('%', #{name}, '%')
        </if>
    </select>
</mapper>