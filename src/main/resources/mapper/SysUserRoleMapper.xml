<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.cmit.testing.dao.SysUserRoleMapper" >
  <resultMap id="BaseResultMap" type="com.cmit.testing.entity.SysUserRole" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="user_id" property="userId" jdbcType="INTEGER" />
    <result column="role_id" property="roleId" jdbcType="INTEGER" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="create_by" property="createBy" jdbcType="VARCHAR" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
    <result column="update_by" property="updateBy" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, user_id, role_id, create_time, create_by, update_time, update_by
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from sys_user_role
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from sys_user_role
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.cmit.testing.entity.SysUserRole" useGeneratedKeys="true" keyProperty="id">
    insert into sys_user_role (id, user_id, role_id, 
      create_time, create_by, update_time, 
      update_by)
    values (#{id,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, #{roleId,jdbcType=INTEGER}, 
      #{createTime,jdbcType=TIMESTAMP}, #{createBy,jdbcType=VARCHAR}, #{updateTime,jdbcType=TIMESTAMP}, 
      #{updateBy,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.cmit.testing.entity.SysUserRole" >
    insert into sys_user_role
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="userId != null" >
        user_id,
      </if>
      <if test="roleId != null" >
        role_id,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="createBy != null" >
        create_by,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
      <if test="updateBy != null" >
        update_by,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="roleId != null" >
        #{roleId,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createBy != null" >
        #{createBy,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateBy != null" >
        #{updateBy,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.cmit.testing.entity.SysUserRole" >
    update sys_user_role
    <set >
      <if test="userId != null" >
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="roleId != null" >
        role_id = #{roleId,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createBy != null" >
        create_by = #{createBy,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateBy != null" >
        update_by = #{updateBy,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.cmit.testing.entity.SysUserRole" >
    update sys_user_role
    set user_id = #{userId,jdbcType=INTEGER},
      role_id = #{roleId,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      create_by = #{createBy,jdbcType=VARCHAR},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      update_by = #{updateBy,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>

  <delete id="deleteByUserIds" parameterType="java.util.List">
    delete from sys_user_role
    where user_id in
    <foreach item="userId" collection="userIds" open="(" close=")" separator=",">
      #{userId,jdbcType=INTEGER}
    </foreach>
  </delete>

  <delete id="deleteByRoleId" parameterType="java.lang.Integer">
    delete from sys_user_role
    where role_id = #{roleId,jdbcType=INTEGER}
  </delete>

  <select id="getByUserId" resultMap="BaseResultMap" parameterType="java.lang.Integer">
    SELECT
    <include refid="Base_Column_List" />
    from sys_user_role
    where user_id = #{userId,jdbcType=INTEGER}
  </select>

  <select id="getByRoleIds" resultMap="BaseResultMap" parameterType="java.lang.Integer">
    SELECT
    <include refid="Base_Column_List" />
    from sys_user_role
    where role_id  in
    <foreach item="roleId" collection="roleIds" open="(" close=")" separator=",">
      #{roleId,jdbcType=INTEGER}
    </foreach>
  </select>

  <!-- 批量插入 -->
  <insert id ="insertSysUserRoleList" parameterType="java.util.List" useGeneratedKeys="true" keyProperty="id">
    <selectKey resultType ="java.lang.Integer" keyProperty= "id" order= "AFTER">
      SELECT LAST_INSERT_ID()
    </selectKey >
      insert into sys_user_role (id, user_id, role_id,create_time, create_by, update_time,update_by)
      values
        <foreach collection ="list" item="sysUserRole" index= "index" separator =",">
          (#{sysUserRole.id,jdbcType=INTEGER}, #{sysUserRole.userId,jdbcType=INTEGER}, #{sysUserRole.roleId,jdbcType=INTEGER},
          #{sysUserRole.createTime,jdbcType=TIMESTAMP}, #{sysUserRole.createBy,jdbcType=VARCHAR}, #{sysUserRole.updateTime,jdbcType=TIMESTAMP},
          #{sysUserRole.updateBy,jdbcType=VARCHAR})
        </foreach >
  </insert >
</mapper>