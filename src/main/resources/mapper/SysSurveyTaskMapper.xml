<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.cmit.testing.dao.SysSurveyTaskMapper">
    <resultMap id="BaseResultMap" type="com.cmit.testing.entity.SysSurveyTask">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        <result column="id" property="id" jdbcType="INTEGER"/>
        <result column="task_id" property="taskId" jdbcType="INTEGER"/>
        <result column="task_name" property="taskName" jdbcType="VARCHAR"/>
        <result column="task_iss" property="taskIss" jdbcType="VARCHAR"/>
        <result column="tg_accuracy" property="tgAccuracy" jdbcType="VARCHAR"/>
        <result column="tg_clicks_avg" property="tgClicksAvg" jdbcType="VARCHAR"/>
        <result column="tg_input_avg" property="tgInputAvg" jdbcType="VARCHAR"/>
        <result column="tg_note_avg" property="tgNoteAvg" jdbcType="VARCHAR"/>
        <result column="tg_step_avg" property="tgStepAvg" jdbcType="VARCHAR"/>
        <result column="executionState" property="executionState" jdbcType="VARCHAR"/>
        <result column="ip" property="ip" jdbcType="VARCHAR"/>
        <result column="time" property="time" jdbcType="TIMESTAMP"/>
        <result column="feedback" property="feedback" jdbcType="VARCHAR"/>
        <result column="feedback_time" property="feedbackTime" jdbcType="TIMESTAMP"/>
        <result column="code" property="code" jdbcType="VARCHAR"/>
        <result column="msg" property="msg" jdbcType="VARCHAR"/>
        <result column="caseIds" property="caseIds" jdbcType="VARCHAR"/>
        <result column="caseState" property="caseState" jdbcType="VARCHAR"/>
        <result column="root" property="root" jdbcType="VARCHAR"/>
        <result column="body" property="body" jdbcType="VARCHAR"/>
        <result column="header" property="header" jdbcType="VARCHAR"/>
    </resultMap>

    <sql id="Base_Column_List">
	id, task_id, task_name, task_iss, tg_accuracy, tg_clicks_avg, tg_input_avg,
	tg_note_avg, tg_step_avg, executionState, ip, time, feedback, feedback_time, code, msg,caseIds,caseState,root,body,header
</sql>
    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
      select <include refid="Base_Column_List" />
        from sys_survey_task where  id = #{id,jdbcType=INTEGER}
	
    </select>

    <!--根据众测任务id的集合获取任务信息-->
    <select id="getSysSurveyTaskByIds" resultMap="BaseResultMap">
        SELECT <include refid="Base_Column_List" />
        FROM sys_survey_task
        WHERE id IN
              <foreach collection="ids" item="id" open="(" close=")" separator=",">
                  #{id}
              </foreach>
    </select>
    
    <!-- 根据任务id查询 -->
    <select id="selectByTaskId" parameterType="java.lang.Integer" resultMap="BaseResultMap">
      select <include refid="Base_Column_List" />
        from sys_survey_task where  task_id = #{taskId,jdbcType=INTEGER}
	
    </select>

	<!-- 根据任务id删除 -->
	<delete id="deleteByTaskId" parameterType="java.lang.Integer">
		delete from sys_survey_task
		where  task_id = #{taskId,jdbcType=INTEGER}
	
	</delete>
	
	<delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from sys_survey_task
    where id = #{id,jdbcType=INTEGER}
  </delete>
  
   <!-- 根据主键批量删除 -->
    <delete id="deleteByIds" parameterType="java.lang.Integer">
        delete from sys_survey_task
        where id IN
        <foreach item="id" collection="ids" open="(" close=")" separator=",">
            #{id,jdbcType=INTEGER}
        </foreach>
    </delete>
    
    <insert id="insert" parameterType="com.cmit.testing.entity.SysSurveyTask">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        insert into sys_survey_task (id, 
        task_id, task_name, task_iss,
        tg_accuracy, tg_clicks_avg, tg_input_avg,
        tg_note_avg, tg_step_avg, executionState,
        ip, time, feedback,
        feedback_time, code, msg,caseIds,caseState,root,body,header
        )
        values (#{id,jdbcType=INTEGER},
        #{taskId,jdbcType=INTEGER}, #{taskName,jdbcType=VARCHAR}, #{taskIss,jdbcType=VARCHAR},
        #{tgAccuracy,jdbcType=VARCHAR}, #{tgClicksAvg,jdbcType=VARCHAR}, #{tgInputAvg,jdbcType=VARCHAR},
        #{tgNoteAvg,jdbcType=VARCHAR}, #{tgStepAvg,jdbcType=VARCHAR}, #{executionState,jdbcType=VARCHAR},
        #{ip,jdbcType=VARCHAR}, #{time,jdbcType=TIMESTAMP}, #{feedback,jdbcType=VARCHAR},
        #{feedbackTime,jdbcType=TIMESTAMP}, #{code,jdbcType=VARCHAR}, #{msg,jdbcType=VARCHAR},#{caseIds,jdbcType=VARCHAR},#{caseState,jdbcType=VARCHAR},
        #{root,jdbcType=VARCHAR},#{body,jdbcType=VARCHAR},#{header,jdbcType=VARCHAR}
        )
    </insert>

    <insert id="insertSelective" parameterType="com.cmit.testing.entity.SysSurveyTask">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        insert into sys_survey_task
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="taskId != null">
                task_id,
            </if>
            <if test="taskName != null">
                task_name,
            </if>
            <if test="taskIss != null">
                task_iss,
            </if>
            <if test="tgAccuracy != null">
                tg_accuracy,
            </if>
            <if test="tgClicksAvg != null">
                tg_clicks_avg,
            </if>
            <if test="tgInputAvg != null">
                tg_input_avg,
            </if>
            <if test="tgNoteAvg != null">
                tg_note_avg,
            </if>
            <if test="tgStepAvg != null">
                tg_step_avg,
            </if>
            <if test="executionState != null">
                executionState,
            </if>
            <if test="ip != null">
                ip,
            </if>
            <if test="time != null">
                time,
            </if>
            <if test="feedback != null">
                feedback,
            </if>
            <if test="feedbackTime != null">
                feedback_time,
            </if>
            <if test="code != null">
                code,
            </if>
            <if test="msg != null">
                msg,
            </if>
            <if test="caseIds != null">
                caseIds,
            </if>
            <if test="caseState != null">
                caseState,
            </if>
            <if test="root != null">
                root,
            </if>
            <if test="body != null">
                body,
            </if>
            <if test="header != null">
                header,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=INTEGER},
            </if>
            <if test="taskId != null">
                #{taskId,jdbcType=INTEGER},
            </if>
            <if test="taskName != null">
                #{taskName,jdbcType=VARCHAR},
            </if>
            <if test="taskIss != null">
                #{taskIss,jdbcType=VARCHAR},
            </if>
            <if test="tgAccuracy != null">
                #{tgAccuracy,jdbcType=VARCHAR},
            </if>
            <if test="tgClicksAvg != null">
                #{tgClicksAvg,jdbcType=VARCHAR},
            </if>
            <if test="tgInputAvg != null">
                #{tgInputAvg,jdbcType=VARCHAR},
            </if>
            <if test="tgNoteAvg != null">
                #{tgNoteAvg,jdbcType=VARCHAR},
            </if>
            <if test="tgStepAvg != null">
                #{tgStepAvg,jdbcType=VARCHAR},
            </if>
            <if test="executionState != null">
                #{executionState,jdbcType=VARCHAR},
            </if>
            <if test="ip != null">
                #{ip,jdbcType=VARCHAR},
            </if>
            <if test="time != null">
                #{time,jdbcType=TIMESTAMP},
            </if>
            <if test="feedback != null">
                #{feedback,jdbcType=VARCHAR},
            </if>
            <if test="feedbackTime != null">
                #{feedbackTime,jdbcType=TIMESTAMP},
            </if>
            <if test="code != null">
                #{code,jdbcType=VARCHAR},
            </if>
            <if test="msg != null">
                #{msg,jdbcType=VARCHAR},
            </if>
            <if test="caseIds != null">
                #{caseIds,jdbcType=VARCHAR},
            </if>
            <if test="caseState != null">
                #{caseState,jdbcType=VARCHAR},
            </if>
            <if test="root != null">
                #{root,jdbcType=VARCHAR},
            </if>
            <if test="body != null">
                #{body,jdbcType=VARCHAR},
            </if>
            <if test="header != null">
                #{header,jdbcType=VARCHAR},
            </if>
        </trim>
    </insert>
    
    <!-- 根据任务名和任务发布人分页查询众测任务信息 -->
    <select id="findByPage" parameterType="java.lang.String" resultType="com.cmit.testing.entity.SysSurveyTask">
        select
        <include refid="Base_Column_List"/>
        from sys_survey_task where 1=1
        <if test="taskName != null and taskName != ''">
            AND task_name LIKE CONCAT('%', #{taskName }, '%')
        </if>
        <if test="taskIss != null and taskIss != ''">
            AND task_iss LIKE CONCAT('%', #{taskIss }, '%')
        </if>
        ORDER BY id DESC
    </select>
  
  <update id="updateByPrimaryKeySelective" parameterType="com.cmit.testing.entity.SysSurveyTask">
    update sys_survey_task
    <trim prefix="set" suffixOverrides=",">
            <if test="taskId != null">
                task_id = #{taskId,jdbcType=INTEGER}, 
    		</if>
            <if test='taskName != null and taskName != ""'>
                task_name = #{taskName,jdbcType=VARCHAR},
            </if>
            <if test='taskIss != null and taskIss != ""'>
                task_iss = #{taskIss,jdbcType=VARCHAR},
            </if>
            <if test='tgAccuracy != null and tgAccuracy != ""'>
                tg_accuracy = #{tgAccuracy,jdbcType=VARCHAR},
            </if>
            <if test='tgClicksAvg != null and tgClicksAvg != ""'>
                tg_clicks_avg = #{tgClicksAvg,jdbcType=VARCHAR},
            </if>
            <if test='tgInputAvg != null and tgInputAvg!= ""'>
                tg_input_avg = #{tgInputAvg,jdbcType=VARCHAR},
            </if>
            <if test='tgNoteAvg != null and tgNoteAvg != ""'>
                tg_note_avg = #{tgNoteAvg,jdbcType=VARCHAR},
            </if>
            <if test='tgStepAvg != null and tgStepAvg != ""'>
                tg_step_avg = #{tgStepAvg,jdbcType=VARCHAR},
            </if>
            <if test='executionState != null and executionState != ""'>
                executionState = #{executionState,jdbcType=VARCHAR},
            </if>
            <if test='ip != null and ip != ""'>
                ip = #{ip,jdbcType=VARCHAR},
            </if>
            <if test="time != null">
                time = #{time,jdbcType=TIMESTAMP},
            </if>
            <if test='feedback != null and feedback != ""'>
                feedback = #{feedback,jdbcType=VARCHAR},
            </if>
            <if test="feedbackTime != null">
                feedback_time = #{feedbackTime,jdbcType=TIMESTAMP},
            </if>
            <if test='code != null and code != ""'>
                code = #{code,jdbcType=VARCHAR},
            </if>
            <if test='msg != null and msg != ""'>
                msg = #{msg,jdbcType=VARCHAR},
            </if>
            <if test='caseIds != null and caseIds != ""'>
                caseIds = #{caseIds,jdbcType=VARCHAR},
            </if>
            <if test='caseState != null and caseState != ""'>
                caseState = #{caseState,jdbcType=VARCHAR},
            </if>
            <if test='root != null and root != ""'>
                root = #{root,jdbcType=VARCHAR},
            </if>
            <if test='body != null and body != ""'>
                body = #{body,jdbcType=VARCHAR},
            </if>
            <if test='header != null and header != ""'>
                header = #{header,jdbcType=VARCHAR},
            </if>
        </trim>   
    			where id = #{id,jdbcType=INTEGER}
  	</update>
  	
  	<update id="updateByPrimaryKey" parameterType="com.cmit.testing.entity.SysSurveyTask">
    update sys_survey_task
    <trim prefix="set" suffixOverrides=",">
            <if test='taskName != null and taskName != ""'>
                task_name = #{taskName,jdbcType=VARCHAR},
            </if>
            <if test='taskIss != null and taskIss != ""'>
                task_iss = #{taskIss,jdbcType=VARCHAR},
            </if>
            <if test='tgAccuracy != null and tgAccuracy != ""'>
                tg_accuracy = #{tgAccuracy,jdbcType=VARCHAR},
            </if>
            <if test='tgClicksAvg != null and tgClicksAvg != ""'>
                tg_clicks_avg = #{tgClicksAvg,jdbcType=VARCHAR},
            </if>
            <if test='tgInputAvg != null and tgInputAvg != ""'>
                tg_input_avg = #{tgInputAvg,jdbcType=VARCHAR},
            </if>
            <if test='tgNoteAvg != null and tgNoteAvg != ""'>
                tg_note_avg = #{tgNoteAvg,jdbcType=VARCHAR},
            </if>
            <if test='tgStepAvg != null and tgStepAvg != ""'>
                tg_step_avg = #{tgStepAvg,jdbcType=VARCHAR},
            </if>
            <if test='executionState != null and executionState != ""'>
                executionState = #{executionState,jdbcType=VARCHAR},
            </if>
            <if test='ip != null and ip != ""'>
                ip = #{ip,jdbcType=VARCHAR},
            </if>
            <if test="time != null">
                time = #{time,jdbcType=TIMESTAMP},
            </if>
            <if test='feedback != null and feedback != ""'>
                feedback = #{feedback,jdbcType=VARCHAR},
            </if>
            <if test="feedbackTime != null">
                feedback_time = #{feedbackTime,jdbcType=TIMESTAMP},
            </if>
            <if test='code != null and code != ""'>
                code = #{code,jdbcType=VARCHAR},
            </if>
            <if test='msg != null and msg != ""'>
                msg = #{msg,jdbcType=VARCHAR},
            </if>
            <if test='caseIds != null and caseIds != ""'>
                caseIds = #{caseIds,jdbcType=VARCHAR},
            </if>
            <if test='caseState != null and caseState != ""'>
                caseState = #{caseState,jdbcType=VARCHAR},
            </if>
            <if test='root != null and root != ""'>
                root = #{root,jdbcType=VARCHAR},
            </if>
            <if test='body != null and body != ""'>
                body = #{body,jdbcType=VARCHAR},
            </if>
            <if test='header != null and header != ""'>
                header = #{header,jdbcType=VARCHAR},
            </if>
        </trim>   
    			where task_id = #{taskId,jdbcType=INTEGER}
  	</update>

    <resultMap id="reportMap" type="com.cmit.testing.entity.vo.SurveyTaskReportVO">
        <result column="success_rote" property="successRote" jdbcType="VARCHAR"/>
        <result column="survey_task_id" property="surveyTaskId" jdbcType="INTEGER" />
        <result column="score" property="score" jdbcType="VARCHAR"/>
        <result column="source" property="source" jdbcType="INTEGER"/>
        <result column="testcase_id" property="testcaseId" jdbcType="INTEGER"/>
        <result column="testcase_name" property="testcaseName" jdbcType="VARCHAR"/>
        <result column="avg_click_num" property="avgClickNum" jdbcType="VARCHAR"/>
        <result column="click_score" property="clickScore" jdbcType="VARCHAR"/>
        <result column="avg_input_num" property="avgInputNum" jdbcType="VARCHAR"/>
        <result column="input_score" property="inputScore" jdbcType="VARCHAR"/>
        <result column="avg_consume_time" property="avgConsumeTime" jdbcType="VARCHAR"/>
        <result column="consume_time_score" property="consumeTimeScore" jdbcType="VARCHAR"/>
        <result column="avg_msg_consume_time" property="avgMsgConsumeTime" jdbcType="VARCHAR"/>
        <result column="msg_consume_time_score" property="msgConsumeTimeScore" jdbcType="VARCHAR"/>
        <result column="province" property="province" jdbcType="VARCHAR"/>
    </resultMap>
    <select id="caseReportList" resultMap="reportMap">
        SELECT *,
            IFNULL((SELECT score FROM sys_survey_task_score  WHERE testcase_id = a.testcase_id AND survey_task_id = a.survey_task_id AND type = 2 AND (a.avg_click_num > CAST(`start` AS DECIMAL) or `start` =0) AND (`end` is null or a.avg_click_num &lt;= CAST(`end` AS DECIMAL))  limit 1),100) click_score ,
            IFNULL((SELECT score FROM sys_survey_task_score  WHERE testcase_id = a.testcase_id AND survey_task_id = a.survey_task_id AND type = 3 AND (a.avg_input_num >  CAST(`start` AS DECIMAL) or `start` =0) AND (a.avg_input_num &lt;= CAST(`end` AS DECIMAL) or `end` is null)  limit 1),100) input_score ,
            IFNULL((SELECT score FROM sys_survey_task_score  WHERE testcase_id = a.testcase_id AND survey_task_id = a.survey_task_id AND type = 4 AND (a.avg_msg_consume_time > `start` or `start` =0) AND  (a.avg_msg_consume_time &lt;= CAST(`end` AS DECIMAL) or `end` is null)  limit 1),100) msg_consume_time_score ,
            IFNULL((SELECT score FROM sys_survey_task_score  WHERE testcase_id = a.testcase_id AND survey_task_id = a.survey_task_id AND type = 1 AND (a.avg_consume_time >  CAST(`start` AS DECIMAL) or `start` =0) AND  (a.avg_consume_time &lt;=  CAST(`end` AS DECIMAL) or `end` is null) limit 1),100) consume_time_score,
            a.success_rote score,
            0 source
        FROM (
            SELECT
                c.old_testcase_id testcase_id,
                c.`name` testcase_name ,
                c.survey_task_id,
                (0+CAST(IFNULL(a.avg_click_num,0) AS CHAR)) avg_click_num,
                (0+CAST(IFNULL(a.avg_input_num,0)AS CHAR)) avg_input_num,
                (0+CAST(IFNULL(a.avg_msg_consume_time,0)AS CHAR)) avg_msg_consume_time,
                (0+CAST(IFNULL(a.avg_consume_time,0)AS CHAR)) avg_consume_time,
                (0+CAST(IFNULL(b.success_rote,0)AS CHAR)) success_rote
            FROM testcase c
            LEFT JOIN (
                SELECT
                    a.success_num/(a.success_num+a.failure_num)*100 success_rote,
                    a.testcase_id,
                    survey_task_id
                FROM (
                    SELECT
                        SUM( CASE a.excute_result WHEN 0 THEN 1 ELSE 0 END ) success_num,
                        SUM( CASE a.excute_result WHEN 1 THEN 1 ELSE 0 END ) failure_num,
                        b.old_testcase_id testcase_id,
                        b.survey_task_id
                    FROM
                      testcase_report a LEFT JOIN testcase b ON b.id = a.testcast_id
                    WHERE
                        b.survey_task_id = #{surveyTaskId}
                        <if test="province!=null and province!=''">
                            and a.province LIKE concat('%',#{province},'%')
                        </if>
                    GROUP BY b.old_testcase_id
                ) a
            ) b ON c.old_testcase_id = b.testcase_id
            LEFT JOIN (
                SELECT
                    b.old_testcase_id testcase_id,
                    AVG(click_num) avg_click_num, -- 点击数
                    AVG(input_num) avg_input_num, -- 输入数
                    AVG(consume_time)/1000 avg_consume_time, -- 总耗时
                    avg((SELECT avg(consume_time) FROM record_step WHERE command = 'getMsgCaptcha' GROUP BY testcase_report_id
                    HAVING testcase_report_id = a.id))/1000 avg_msg_consume_time -- 短信送达耗时
                FROM
                  testcase_report a
                LEFT JOIN testcase b ON b.id = a.testcast_id
                WHERE
                    excute_result = 0
                    and b.survey_task_id = #{surveyTaskId}
                    <if test="province!=null and province!=''">
                        AND a.province LIKE concat('%',#{province},'%')
                    </if>
                GROUP BY b.old_testcase_id
                HAVING b.old_testcase_id != 0
            ) a ON a.testcase_id = b.testcase_id
            WHERE 1=1
            AND c.survey_task_id =#{surveyTaskId}
        ) a where 1 =1
        <if test="testcaseIdList!=null and testcaseIdList.size>0" >
            AND a.testcase_id in
            <foreach collection="testcaseIdList" open="(" close=")" separator="," item="id">
                #{id}
            </foreach>
        </if>
    </select>
    <select id="caseProvinceReportList" resultMap="reportMap">
        SELECT *,
            IFNULL((SELECT score FROM sys_survey_task_score  WHERE testcase_id = a.testcase_id AND survey_task_id = a.survey_task_id AND type = 2 AND (a.avg_click_num > CAST(`start` AS DECIMAL) or `start` =0) AND (`end` is null or a.avg_click_num &lt;= CAST(`end` AS DECIMAL))  limit 1),100) click_score ,
            IFNULL((SELECT score FROM sys_survey_task_score  WHERE testcase_id = a.testcase_id AND survey_task_id = a.survey_task_id AND type = 3 AND (a.avg_input_num >  CAST(`start` AS DECIMAL) or `start` =0) AND (a.avg_input_num &lt;= CAST(`end` AS DECIMAL) or `end` is null)  limit 1),100) input_score ,
            IFNULL((SELECT score FROM sys_survey_task_score  WHERE testcase_id = a.testcase_id AND survey_task_id = a.survey_task_id AND type = 4 AND (a.avg_msg_consume_time > `start` or `start` =0) AND  (a.avg_msg_consume_time &lt;= CAST(`end` AS DECIMAL) or `end` is null)  limit 1),100) msg_consume_time_score ,
            IFNULL((SELECT score FROM sys_survey_task_score  WHERE testcase_id = a.testcase_id AND survey_task_id = a.survey_task_id AND type = 1 AND (a.avg_consume_time >  CAST(`start` AS DECIMAL) or `start` =0) AND  (a.avg_consume_time &lt;=  CAST(`end` AS DECIMAL) or `end` is null) limit 1),100) consume_time_score,
            a.success_rote score,
            0 source
        FROM (
            SELECT
                c.old_testcase_id testcase_id ,
                c.`name` testcase_name ,
                c.survey_task_id,
                b.province,
                (0+CAST(IFNULL(a.avg_click_num,0) AS CHAR)) avg_click_num,
                (0+CAST(IFNULL(a.avg_input_num,0)AS CHAR)) avg_input_num,
                (0+CAST(IFNULL(a.avg_msg_consume_time,0)AS CHAR)) avg_msg_consume_time,
                (0+CAST(IFNULL(a.avg_consume_time,0)AS CHAR)) avg_consume_time,
                (0+CAST(IFNULL(b.success_rote,0)AS CHAR)) success_rote
            FROM testcase c
            LEFT JOIN (
                SELECT
                    a.success_num/(a.success_num+a.failure_num)*100 success_rote,
                    a.province,
                    a.testcase_id,
                    survey_task_id
                FROM (
                    SELECT
                        SUM( CASE a.excute_result WHEN 0 THEN 1 ELSE 0 END ) success_num,
                        SUM( CASE a.excute_result WHEN 1 THEN 1 ELSE 0 END ) failure_num,
                        a.province,
                        b.old_testcase_id testcase_id,
                        b.survey_task_id
                    FROM
                      testcase_report a
                    LEFT JOIN testcase b ON b.id = a.testcast_id
                    WHERE
                        b.survey_task_id =#{surveyTaskId}
                    GROUP BY b.old_testcase_id,a.province
                ) a
            ) b ON b.testcase_id = c.old_testcase_id
            LEFT JOIN (
                SELECT
                    b.old_testcase_id testcase_id,
                    a.province,
                    AVG(click_num) avg_click_num, -- 点击数
                    AVG(input_num) avg_input_num, -- 输入数
                    AVG(consume_time)/1000 avg_consume_time, -- 总耗时
                    avg((SELECT avg(consume_time) FROM record_step WHERE command = 'getMsgCaptcha' GROUP BY testcase_report_id
                    HAVING testcase_report_id = a.id))/1000 avg_msg_consume_time -- 短信送达耗时
                FROM
                  testcase_report a LEFT JOIN testcase b ON b.id = a.testcast_id
                WHERE
                    excute_result = 0
                    and b.survey_task_id =#{surveyTaskId}
                GROUP BY b.old_testcase_id,a.province
                HAVING b.old_testcase_id != 0
            ) a   ON (a.testcase_id = b.testcase_id  AND a.province= b.province)
            WHERE 1=1
              and c.survey_task_id =#{surveyTaskId}
              and b.province is not null
        ) a where 1=1
        <if test="testcaseIdList!=null and testcaseIdList.size>0" >
             AND a.testcase_id in
            <foreach collection="testcaseIdList" open="(" close=")" separator="," item="id">
                #{id}
            </foreach>
        </if>
    </select>
    <resultMap id="stepReportMap" type="com.cmit.testing.entity.vo.StepReportVO" >
        <result column="step" property="step" jdbcType="VARCHAR" />
        <result column="command" property="command" jdbcType="VARCHAR" />
        <result column="param_name" property="paramName" jdbcType="VARCHAR" />
        <result column="remark" property="remark" jdbcType="VARCHAR" />
        <result column="avg_consume_time" property="avgConsumeTime" jdbcType="VARCHAR" />
    </resultMap>
    <select id="caseStepReport" resultMap="stepReportMap">
        SELECT
            b.step,b.command,b.param_name,b.remark,convert(a.avg_consume_time,decimal) avg_consume_time
        FROM (
            SELECT c.step,AVG(c.consume_time)  avg_consume_time
            FROM record_step c
                LEFT JOIN testcase_report a ON c.testcase_report_id = a.id
                LEFT JOIN testcase b ON a.testcast_id = b.id
            WHERE b.old_testcase_id = #{testCaseId} AND survey_task_id = #{surveyTaskId}
            AND a.excute_result = 0
            <if test="province!=null and province!=''" >
                 AND a.province = #{province}
            </if>
            GROUP BY c.step
        ) a LEFT JOIN (
            SELECT a.*
            FROM script_step a
                LEFT JOIN testcase b ON a.script_id = b.script_id
            WHERE b.id = #{testCaseId}
        ) b ON a.step = b.step;
    </select>
</mapper>