<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.cmit.testing.dao.app.AppParamMapper" >
  <resultMap id="BaseResultMap" type="com.cmit.testing.entity.app.AppParam" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="app_id" property="appId" jdbcType="VARCHAR" />
    <result column="account" property="account" jdbcType="VARCHAR" />
    <result column="password" property="password" jdbcType="VARCHAR" />
    <result column="is_Del" property="isDel" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    id,app_id,account,password,is_Del
  </sql>

  <resultMap id="DeviceParamMap" type="com.cmit.testing.entity.proxy.DeviceParam">
    <result column="device_sn" property="deviceSn" jdbcType="VARCHAR" />
    <result column="account" property="account" jdbcType="VARCHAR" />
    <result column="password" property="password" jdbcType="VARCHAR" />
  </resultMap>

  <!--根据deviceSN和应用ID来获取设备关联的应用参数-->
  <select id="getAppParamByMap" resultMap="DeviceParamMap" parameterType="java.lang.String">
    SELECT
      device_sn,
      account,
      password
    FROM
        (
          SELECT device_sn, tel_num FROM app_device WHERE device_sn IN
          <foreach item="deviceSn" collection="deviceSnList" open="(" close=")" separator=",">
            #{deviceSn,jdbcType=VARCHAR}
          </foreach>
        ) AS d
        LEFT JOIN
        ( SELECT account, `password` FROM app_params WHERE app_id = #{appId, jdbcType=INTEGER} ) AS p ON p.account = d.tel_num
  </select>

  <!--根据deviceIds和应用ID来获取设备关联的应用参数-->
  <select id="getAppParamByMap1" resultMap="DeviceParamMap" parameterType="java.lang.Integer">
    SELECT
        device_sn,
        account,
        `password`
    FROM
        ( SELECT device_sn, tel_num FROM app_device WHERE device_id IN
          <foreach item="deviceId" collection="deviceIdList" open="(" close=")" separator=",">
            #{deviceId,jdbcType=VARCHAR}
          </foreach>
         ) AS d
        LEFT JOIN
        ( SELECT account, `password` FROM app_params WHERE app_id = #{appId, jdbcType=INTEGER} ) AS p ON p.account = d.tel_num
  </select>

  <insert id="insertSelective" parameterType="com.cmit.testing.entity.app.AppParam" useGeneratedKeys="true" keyProperty="id">
    insert into app_params
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="appId != null" >
        app_id,
      </if>
      <if test="account != null" >
        account,
      </if>
      <if test="password != null" >
        password,
      </if>
      <if test="isDel != null" >
        is_Del,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="appId != null" >
        #{appId,jdbcType=INTEGER},
      </if>
      <if test="account != null" >
        #{account,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="isDel != null" >
        #{isDel,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>

  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.cmit.testing.entity.app.AppParam" >
    select
    <include refid="Base_Column_List" />
    from app_params
    <where >
      <if test="id != null" >
        and id = #{id}
      </if>
      <if test="appId != null" >
        and app_id = #{appId}
      </if>
      <if test="account != null" >
        and account = #{account}
      </if>
      <if test="password != null" >
        and password = #{password}
      </if>
      <if test="isDel != null" >
        and is_Del = #{isDel}
      </if>
    </where>
  </select>

  <delete id="deleteByExam" parameterType="com.cmit.testing.entity.app.AppParam">
    DELETE FROM app_params
    WHERE app_id = #{appId} AND is_Del = #{isDel}
  </delete>

  <update id="updateByExample" parameterType="com.cmit.testing.entity.app.AppParam" >
    update app_params
    <set >
      <if test="account != null" >
        account = #{account,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="isDel != null" >
        is_Del = #{isDel,jdbcType=VARCHAR}
      </if>
    </set>
    where app_id = #{appId,jdbcType=INTEGER}
  </update>

</mapper>