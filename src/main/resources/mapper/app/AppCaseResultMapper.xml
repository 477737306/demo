<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.cmit.testing.dao.app.AppCaseResultMapper" >
  <resultMap id="BaseResultMap" type="com.cmit.testing.entity.app.AppCaseResult" >
      <id column="result_id" property="resultId" jdbcType="INTEGER" />
      <result column="execute_id" property="executeId" jdbcType="INTEGER" />
      <result column="case_id" property="caseId" jdbcType="INTEGER" />
      <result column="old_case_id" property="oldCaseId" jdbcType="INTEGER" />
      <result column="device_id" property="deviceId" jdbcType="INTEGER" />
      <result column="log_url" property="logUrl" jdbcType="VARCHAR" />
      <result column="is_finish" property="isFinish" jdbcType="INTEGER" />
      <result column="execute_result" property="executeResult" jdbcType="INTEGER" />
      <result column="pass_status" property="passStatus" jdbcType="INTEGER" />
      <result column="screenshot_url" property="screenshotUrl" jdbcType="VARCHAR" />
      <result column="record_video_url" property="recordVideoUrl" jdbcType="VARCHAR" />
      <result column="result_url" property="resultUrl" jdbcType="VARCHAR" />
      <result column="click_num" property="clickNum" jdbcType="INTEGER" />
      <result column="input_num" property="inputNum" jdbcType="INTEGER" />
      <result column="consume_time" property="consumeTime" jdbcType="DOUBLE" />
      <result column="create_time" property="createTime" jdbcType="TIMESTAMP"/>
      <result column="execute_person" property="executePerson" jdbcType="INTEGER" />
  </resultMap>

  <resultMap id="ResultMapWithBLOBs" type="com.cmit.testing.entity.app.AppCaseResult" extends="BaseResultMap" >
    <result column="defect_desc" property="defectDesc" jdbcType="LONGVARCHAR" />
  </resultMap>

    <sql id="Base_Column_List" >
        result_id, execute_id, case_id,old_case_id, device_id, log_url, is_finish,execute_result, pass_status, screenshot_url, record_video_url,
        result_url ,click_num,input_num,consume_time,create_time,execute_person
    </sql>

    <sql id="Blob_Column_List" >
      defect_desc
    </sql>

    <sql id="Base_Column_List_B" >
        r.result_id AS 'caseResultId',
        r.case_id AS 'caseId',
        r.old_case_id AS 'oldCaseId',
        r.log_url AS 'logUrl',
        r.execute_result AS 'executeResult',
        r.pass_status AS 'passStatus',
        r.screenshot_url AS 'screenshotUrl',
        r.record_video_url AS 'recordVideoUrl',
        r.defect_desc AS 'defectDesc',
        r.is_finish AS 'isFinish',
        r.create_time AS 'createTime',
        r.execute_person AS 'executePerson',
        cd.tel_num AS 'telNum',
        cd.province AS 'province',
        cd.execute_time AS 'executeTime',
        r.device_id AS 'deviceId',
        c.case_name AS 'caseName',
        c.case_num AS 'serialNumber',
        s.script_name AS 'scriptName',
        d.device_brand AS 'deviceHost',
        b.name AS 'businessName',
        b.name AS 'projectName',
        "app" AS 'type'
    </sql>

    <!--根据副本用例ID获取对应的报告信息-->
    <select id="getAppResultByCaseIdAndStatus" resultType="com.cmit.testing.entity.vo.CommonResultVO">
      SELECT <include refid="Base_Column_List_B"/>
      FROM
        app_case_result AS r
        LEFT JOIN app_case_device AS cd ON cd.id = r.execute_id
        LEFT JOIN app_case AS c ON c.case_id = r.old_case_id
        LEFT JOIN app_script AS s ON s.script_id = c.script_id
        LEFT JOIN app_device AS d ON d.device_id = r.device_id
        LEFT JOIN business AS b ON b.id = c.business_id
        LEFT JOIN project AS p ON p.id = b.project_id
      WHERE
        r.case_id = #{caseId}
        <if test="executeResult != null">
            r.execute_result = #{executeResult}
        </if>
    </select>

    <!--根据结果主键批量删除报告-->
    <delete id="deleteResultByIds" parameterType="java.util.List">
        delete from app_case_result where result_id in
        <foreach close=")" collection="ids" item="resultId" open="(" separator=",">
            #{resultId, jdbcType=INTEGER}
        </foreach>
    </delete>


  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Integer" >
    select
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from app_case_result
    where result_id = #{resultId,jdbcType=INTEGER}
  </select>
    <select id="selectByExecuteId" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Integer" >
        select
        <include refid="Base_Column_List" />
        ,
        <include refid="Blob_Column_List" />
        from app_case_result
        where execute_id = #{executeId,jdbcType=INTEGER}
    </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from app_case_result
    where result_id = #{resultId,jdbcType=INTEGER}
  </delete>

   <delete id="deleteResultByCaseId" parameterType="java.lang.Integer">
       DELETE FROM app_case_result WHERE case_id = #{appCaseId, jdbcType=INTEGER}
   </delete>

    <delete id="deleteResultByExecuteId" parameterType="java.lang.Integer">
       DELETE FROM app_case_result WHERE execute_id = #{executeId, jdbcType=INTEGER}
   </delete>

    <select id="getResultIdsByCaseId" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        SELECT <include refid="Base_Column_List" /> FROM app_case_result WHERE case_id = #{appCaseId, jdbcType=INTEGER}
    </select>
    <select id="countByExecuteId" parameterType="java.lang.Integer" resultType="java.lang.Integer">
        SELECT count(*) FROM app_case_result WHERE execute_id = #{executeId, jdbcType=INTEGER}
    </select>
  <insert id="insert" parameterType="com.cmit.testing.entity.app.AppCaseResult" >
    insert into app_case_result (result_id,execute_id, case_id, old_case_id, device_id,
      log_url, is_finish, execute_result,pass_status,
      screenshot_url, record_video_url, result_url, 
      defect_desc,click_num,input_num,consume_time, create_time, execute_person)
    values (#{resultId,jdbcType=INTEGER},#{executeId,jdbcType=INTEGER}, #{caseId,jdbcType=INTEGER}, #{oldCaseId,jdbcType=INTEGER},#{deviceId,jdbcType=INTEGER},
      #{logUrl,jdbcType=VARCHAR}, #{isFinish,jdbcType=INTEGER}, #{executeResult,jdbcType=INTEGER}, #{passStatus,jdbcType=INTEGER},
      #{screenshotUrl,jdbcType=VARCHAR}, #{recordVideoUrl,jdbcType=VARCHAR}, #{resultUrl,jdbcType=VARCHAR}, 
      #{defectDesc,jdbcType=LONGVARCHAR},#{clickNum},#{inputNum},#{consumeTime},#{createTime},#{executePerson})
  </insert>
  <insert id="insertSelective" parameterType="com.cmit.testing.entity.app.AppCaseResult"  useGeneratedKeys="true" keyProperty="resultId">
    insert into app_case_result
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="resultId != null" >
        result_id,
      </if>
      <if test="executeId != null" >
        execute_id,
      </if>
      <if test="caseId != null" >
        case_id,
      </if>
        <if test="oldCaseId != null" >
            old_case_id,
        </if>
      <if test="deviceId != null" >
        device_id,
      </if>
      <if test="logUrl != null" >
        log_url,
      </if>
      <if test="isFinish != null" >
        is_finish,
      </if>
        <if test="executeResult != null">
            execute_result,
        </if>
      <if test="passStatus != null" >
        pass_status,
      </if>
      <if test="screenshotUrl != null" >
        screenshot_url,
      </if>
      <if test="recordVideoUrl != null" >
        record_video_url,
      </if>
      <if test="resultUrl != null" >
        result_url,
      </if>
      <if test="defectDesc != null" >
        defect_desc,
      </if>
      <if test="clickNum != null" >
          click_num,
      </if>
      <if test="inputNum != null" >
          input_num,
      </if>
      <if test="consumeTime != null" >
          consume_time,
      </if>
        <if test="createTime != null" >
            create_time,
        </if>
        <if test="executePerson != null" >
            execute_person,
        </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="resultId != null" >
        #{resultId,jdbcType=INTEGER},
      </if>
        <if test="executeId != null" >
            #{executeId,jdbcType=INTEGER},
        </if>
      <if test="caseId != null" >
        #{caseId,jdbcType=INTEGER},
      </if>
      <if test="oldCaseId != null">
          #{oldCaseId},
      </if>
      <if test="deviceId != null" >
        #{deviceId,jdbcType=INTEGER},
      </if>
      <if test="logUrl != null" >
        #{logUrl,jdbcType=VARCHAR},
      </if>
      <if test="isFinish != null" >
        #{isFinish,jdbcType=INTEGER},
      </if>
        <if test="executeResult != null">
            #{executeResult,jdbcType=INTEGER},
        </if>
      <if test="passStatus != null" >
        #{passStatus,jdbcType=INTEGER},
      </if>
      <if test="screenshotUrl != null" >
        #{screenshotUrl,jdbcType=VARCHAR},
      </if>
      <if test="recordVideoUrl != null" >
        #{recordVideoUrl,jdbcType=VARCHAR},
      </if>
      <if test="resultUrl != null" >
        #{resultUrl,jdbcType=VARCHAR},
      </if>
      <if test="defectDesc != null" >
        #{defectDesc,jdbcType=LONGVARCHAR},
      </if>
      <if test="clickNum != null" >
            #{clickNum,jdbcType=LONGVARCHAR},
      </if>
      <if test="inputNum != null" >
        #{inputNum,jdbcType=LONGVARCHAR},
      </if>
      <if test="consumeTime != null" >
        #{consumeTime,jdbcType=LONGVARCHAR},
      </if>
        <if test="createTime != null" >
            #{createTime},
        </if>
        <if test="executePerson != null" >
            #{executePerson},
        </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.cmit.testing.entity.app.AppCaseResult" >
    update app_case_result
    <set >
        <if test="executeId != null" >
            execute_id = #{executeId,jdbcType=INTEGER},
        </if>
      <if test="caseId != null" >
        case_id = #{caseId,jdbcType=INTEGER},
      </if>
        <if test="oldCaseId != null" >
            old_case_id = #{oldCaseId,jdbcType=INTEGER},
        </if>
      <if test="deviceId != null" >
        device_id = #{deviceId,jdbcType=INTEGER},
      </if>
      <if test="logUrl != null" >
        log_url = #{logUrl,jdbcType=VARCHAR},
      </if>
      <if test="isFinish != null" >
        is_finish = #{isFinish,jdbcType=INTEGER},
      </if>
        <if test="executeResult != null">
            execute_result = #{executeResult,jdbcType=INTEGER},
        </if>
      <if test="passStatus != null" >
        pass_status = #{passStatus,jdbcType=INTEGER},
      </if>
      <if test="screenshotUrl != null" >
        screenshot_url = #{screenshotUrl,jdbcType=VARCHAR},
      </if>
      <if test="recordVideoUrl != null" >
        record_video_url = #{recordVideoUrl,jdbcType=VARCHAR},
      </if>
      <if test="resultUrl != null" >
        result_url = #{resultUrl,jdbcType=VARCHAR},
      </if>
      <if test="defectDesc != null" >
        defect_desc = #{defectDesc,jdbcType=LONGVARCHAR},
      </if>
      <if test="clickNum != null" >
            click_num = #{clickNum,jdbcType=INTEGER},
      </if>
      <if test="inputNum != null" >
            input_num = #{inputNum,jdbcType=INTEGER},
      </if>
      <if test="consumeTime != null" >
          consume_time = consume_time + #{consumeTime,jdbcType=DOUBLE},
      </if>
        <if test="createTime != null" >
            create_time = #{createTime,jdbcType=TIMESTAMP},
        </if>
        <if test="executePerson != null" >
            execute_person = #{executePerson,jdbcType=INTEGER},
        </if>
    </set>
    where result_id = #{resultId,jdbcType=INTEGER}
  </update>
    <update id="updateByPrimaryKeySelectiveVO" parameterType="com.cmit.testing.entity.vo.CaseExcResultVO" >

        update app_case_result  a LEFT JOIN app_case_device b ON a.execute_id=b.id
        <set >

            <if test="excuteResult != null" >
               a.pass_status = #{excuteResult,jdbcType=INTEGER},
            </if>

            <if test="defectDescription != null " >
                a.defect_desc = #{defectDescription,jdbcType=LONGVARCHAR},
            </if>
            <if test="executeNum != null" >
               b.execute_num = #{executeNum,jdbcType=LONGVARCHAR},
            </if>
        </set>
        where result_id = #{testCaseReportId,jdbcType=INTEGER}
    </update>
    <update id="updateBytetestCaseReport" parameterType="com.cmit.testing.entity.TestCaseReport" >
        update app_case_result
        <set >

            <if test="passStatus != null" >
                pass_status = #{passStatus,jdbcType=INTEGER},
            </if>

            <if test="defectDescription != null and defectDescription !=''" >
                defect_desc = #{defectDescription,jdbcType=LONGVARCHAR},
            </if>
        </set>
        where result_id = #{id,jdbcType=INTEGER}
    </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.cmit.testing.entity.app.AppCaseResult" >

    update app_case_result
    set
      execute_id = #{executeId,jdbcType=INTEGER},
      case_id = #{caseId,jdbcType=INTEGER},
      device_id = #{deviceId,jdbcType=INTEGER},
      log_url = #{logUrl,jdbcType=VARCHAR},
      is_finish = #{isFinish,jdbcType=INTEGER},
      execute_result = #{executeResult,jdbcType=INTEGER},
      pass_status = #{passStatus,jdbcType=INTEGER},
      screenshot_url = #{screenshotUrl,jdbcType=VARCHAR},
      record_video_url = #{recordVideoUrl,jdbcType=VARCHAR},
      result_url = #{resultUrl,jdbcType=VARCHAR},
      defect_desc = #{defectDesc,jdbcType=LONGVARCHAR}
    where result_id = #{resultId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.cmit.testing.entity.app.AppCaseResult" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update app_case_result
    set execute_id = #{executeId,jdbcType=INTEGER},
      case_id = #{caseId,jdbcType=INTEGER},
      device_id = #{deviceId,jdbcType=INTEGER},
      log_url = #{logUrl,jdbcType=VARCHAR},
      is_finish = #{isFinish,jdbcType=INTEGER},
      execute_result = #{executeResult,jdbcType=INTEGER},
      pass_status = #{passStatus,jdbcType=INTEGER},
      screenshot_url = #{screenshotUrl,jdbcType=VARCHAR},
      record_video_url = #{recordVideoUrl,jdbcType=VARCHAR},
      result_url = #{resultUrl,jdbcType=VARCHAR}
    where result_id = #{resultId,jdbcType=INTEGER}
  </update>

  <select id="listCaseExcResult" parameterType="java.lang.Integer"
          resultType="com.cmit.testing.entity.vo.CaseExcResultVO">
        SELECT business.`name`,
                 business.id,
                 app_case_device.id,
                 app_case_device.province,
                 app_case_device.tel_num as phoneNum,
                 app_case_device.execute_time,
                 app_device.device_brand,
                 app_case_result.pass_status as excuteResult,
                 app_case_device.execute_status,
                 app_case_result.log_url,
                 app_case_result.defect_desc,
                 app_case_result.screenshot_url,
                 app_case_result.record_video_url
        FROM
        app_case_result
        JOIN app_case_device ON app_case_result.execute_id = app_case_device.id
        LEFT JOIN app_case ON app_case.case_id = app_case_device.case_id
        LEFT JOIN app_device ON app_case_device.device_id = app_device.device_id
        LEFT JOIN business ON app_case.business_id = business.id
        LEFT JOIN app_script ON app_case.script_id = app_script.script_id
        WHERE 1 = 1
                AND app_case.case_id = #{caseid}
    </select>
    <select id="getCaseReportByCaseIdAndExecuteNum" resultType="com.cmit.testing.entity.vo.CommonResultVO">
        SELECT
          d.province, d.execute_num AS 'executeNum', r.pass_status AS 'passStatus', r.execute_result AS 'executeResult',
          r.result_id AS 'caseResultId',
          "app" AS 'type'
        FROM
            app_case_result AS r
            LEFT JOIN app_case_device d ON d.id = r.execute_id
            LEFT JOIN app_case c ON c.case_id = d.case_id
        INNER JOIN (
        SELECT	a.province,
            CASE
                WHEN max_n >= #{number} THEN #{number}
                WHEN max_n &lt; #{number} THEN max_n
            END AS ex_n
        FROM
            (
              SELECT cd.province, MAX( cd.execute_num ) max_n
              FROM app_case_device cd
                LEFT JOIN app_case ap ON ap.case_id = cd.case_id
                LEFT JOIN app_case_result cr ON cr.execute_id = cd.id
              WHERE	cr.result_id IS NOT NULL
                AND ap.old_case_id = #{caseId}
              GROUP BY cd.province
            ) a
        ) a ON ( a.province = d.province AND a.ex_n = d.execute_num)
        WHERE
        c.old_case_id =#{caseId}
</select>


    <select id="CaseResults" parameterType="com.cmit.testing.entity.vo.TestCaseReportVO"
            resultType="com.cmit.testing.entity.vo.TestCaseReportVO">
        SELECT
        app_case_result.result_id as testCaseReportId,
        business.name AS businessName,
        business.id ,
        project.`name` as projectName,
        app_case.case_name AS testcastName,
        app_case_device.id,
        app_case_device.province,
        app_case_device.tel_num AS phoneNum,
        app_case_device.execute_time AS excuteTime,
        app_device.device_brand as executeHost,
        (select  sys_user.name from sys_user where sys_user.id =app_case.update_person ) AS execMan,
        app_case_result.pass_status AS passStatus,
        app_case_device.pass_status AS excuteResult,
        app_case_result.result_id AS resultId ,
        app_case_result.log_url AS log,
        app_case_result.defect_desc AS defectDescription,
        app_case_result.screenshot_url AS snapshotLocation,
        app_case_result.record_video_url AS videoLocation,
        'app' as type ,
        app_case_device.execute_num as excuteNum
        FROM
        app_case_result
        left JOIN app_case_device ON app_case_result.execute_id = app_case_device.id
         JOIN app_case ON app_case.case_id = app_case_device.case_id
        LEFT JOIN app_device ON app_case_device.device_id = app_device.device_id
        LEFT JOIN business ON app_case.business_id = business.id
        LEFT JOIN app_script ON app_case.script_id = app_script.script_id
        LEFT JOIN  (SELECT * FROM app_case WHERE
        old_case_id = 0
        <if test="testcastName != null and testcastName != ''" >
            AND case_name LIKE CONCAT('%', #{testcastName},'%')
        </if>
        ) h ON app_case.old_case_id = h.case_id
        left JOIN project ON business.project_id=project.id
        WHERE app_case.sys_task_id IS NULL
            <if test="type != null">
              AND app_case.survey_task_id IS NULL
            </if>
            <if test="businessName != null and businessName != ''">
                AND business.name LIKE CONCAT('%', #{businessName},'%')
            </if>
            <if test="province != null and province !=''">
                AND app_case_device.province LIKE CONCAT('%',#{province},'%')
            </if>
            <if test="testcastName != null and testcastName !=''">
                AND app_case.case_name LIKE CONCAT('%',#{testcastName},'%')
            </if>
            <if test="excuteResult != null">
                AND app_case_result.pass_status = #{excuteResult}
            </if>
            <if test="testcastId != null" >
                AND app_case.old_case_id = #{testcastId}
            </if>
            <if test="passStatus != null" >
                AND app_case_device.pass_status = #{passStatus}
            </if>
            <if test="phoneNum != null and phoneNum !=''">
                AND app_case_device.tel_num LIKE CONCAT('%',#{phoneNum},'%')
            </if>
            <if test="testCaseReportId != null and testCaseReportId !=''">
                and   app_case_result.result_id= #{testCaseReportId}
            </if>
            <if test="excuteNum != null ">
            AND app_case_device.execute_num = #{excuteNum}
             </if>
            <if test="surveyTaskId != null " >
                AND app_case.survey_task_id = #{surveyTaskId}
            </if>
            <if test="surveyTaskId == null or surveyTaskId ==''" >
                AND app_case.survey_task_id  IS NULL
            </if>
            <if test="projectName != null and projectName != ''" >
            AND project.`name` LIKE CONCAT('%', #{projectName},'%')
             </if>
            <if test="appTestCaseReportIds != null and appTestCaseReportIds.size >0" >
                AND app_case_result.result_id IN
             <foreach close=")" collection="appTestCaseReportIds" item="testCaseReportId" open="(" separator=",">
               #{testCaseReportId,jdbcType=INTEGER}
             </foreach>
            </if>

    </select>

    <select id="getAppCaseResultByCaseId" parameterType="com.cmit.testing.entity.vo.CaseExcResultVO"
            resultType="com.cmit.testing.entity.vo.CaseExcResultVO">
        SELECT
            business.name AS businessName,
            app_case_result.result_id as testCaseReportId,
            business.id ,
            project.`name` as projectName,
            app_case.case_name AS testcastName,
            app_case_device.id,
            app_case_device.province,
            app_case_device.execute_num as executeNum,
            app_case_device.tel_num AS phoneNum,
            app_device.device_brand AS deviceBrand,
            (select  sys_user.name from sys_user where sys_user.id =app_case.update_person ) AS execMan,
            app_case_device.execute_time AS executeTime,
            app_device.device_brand,
            app_case_device.pass_status AS passStatus,
            app_case_result.pass_status AS excuteResult,
            app_case_result.log_url AS log,
            app_case_result.defect_desc AS defectDescription,
            app_case_result.screenshot_url AS snapshotLocation,
            app_case_result.record_video_url AS videoLocation,
            app_script.script_type
        FROM
            app_case_result
            LEFT JOIN app_case_device ON app_case_result.execute_id = app_case_device.id
            LEFT JOIN app_case ON app_case.case_id = app_case_device.case_id
            LEFT JOIN app_device ON app_case_device.device_id = app_device.device_id
            LEFT JOIN business ON app_case.business_id = business.id
            LEFT JOIN app_script ON app_case.script_id = app_script.script_id
            LEFT JOIN project ON business.project_id=project.id
        WHERE app_case.sys_task_id IS NULL
            <if test="type != null">
                AND app_case.survey_task_id IS NULL
            </if>
            <if test="businessName != null and businessName != ''">
                AND business.name LIKE CONCAT('%', #{businessName},'%')
            </if>
            <if test="province != null and province !=''">
                AND app_case_device.province LIKE CONCAT('%',#{province},'%')
            </if>
            <if test="testcastName != null and testcastName !=''">
                AND app_case.case_name LIKE CONCAT('%',#{testcastName},'%')
            </if>
            <if test="executeStatus != null">
                AND app_case_device.execute_status = #{executeStatus}
            </if>
            <if test="passStatus != null" >
                AND app_case_device.pass_status = #{passStatus}
            </if>
            <if test="executeNum != null and executeNum !=''">
                AND app_case_device.execute_num = #{executeNum}
            </if>
            <if test="executeNum == null and executeNum ==''">
                AND  app_case_device.execute_num = (SELECT Max(execute_num) FROM app_case_device WHERE case_id = #{caseId})
            </if>
            <if test="phoneNum != null and phoneNum !=''">
                AND app_case_device.tel_num LIKE CONCAT('%',#{phoneNum},'%')
            </if>
            <if test="testcastId != null and testcastId !=''" >
            AND app_case.old_case_id = #{testcastId}
            </if>
            <if test="caseId != null and caseId !=''">
                and app_case.old_case_id=#{caseId}
            </if>
            <if test="excuteResult != null">
                and app_case_result.pass_status=#{excuteResult}
            </if>
            <if test=" testCaseReportId!= null">
                and app_case_result.result_id=#{testCaseReportId}
            </if>
           <if test="testCaseReportIds != null and testCaseReportIds.size >0" >
           AND app_case_result.result_id IN
           <foreach close=")" collection="testCaseReportIds" item="testCaseReportId" open="(" separator=",">
            #{testCaseReportId,jdbcType=INTEGER}
           </foreach>
           </if>
    </select>
    <select id="TestList" parameterType="com.cmit.testing.entity.vo.CaseExcResultVO"
            resultType="com.cmit.testing.entity.vo.CaseExcResultVO">
       SELECT
        business.name AS businessName,
        business.id ,
        app_case_device.device_id AS deviceId,
        app_script.script_name AS scriptName,
        app_case.case_name AS testcastName,
         (select  sys_user.name from sys_user where sys_user.id =app_case.update_person ) AS execMan,
        app_case_device.id as executeId,
        app_case_device.province,
        app_case_device.tel_num AS phoneNum,
        app_case_device.execute_time AS executeTime,
        app_device.device_brand AS deviceBrand,
        app_case_device.pass_status AS executeStatus,
        app_case_device.execute_status AS passStatus,
        app_script.script_type
        FROM app_case
         JOIN app_case_device
        ON app_case.case_id = app_case_device.case_id
         JOIN app_device
        ON app_case_device.device_id = app_device.device_id
         JOIN business
        ON app_case.business_id = business.id
         JOIN app_script
        ON app_case.script_id=app_script.script_id
        WHERE app_case.sys_task_id IS NULL
        <if test="type != null">
            AND app_case.survey_task_id IS NULL
        </if>
        <if test="caseId != null ">
            and app_case.old_case_id =#{caseId,jdbcType=INTEGER}
        </if>
        <if test="scriptName != null and scriptName !=''">
            and app_script.script_name LIKE CONCAT('%',#{scriptName,jdbcType=VARCHAR},'%')
        </if>
        <if test="province != null and province !=''">
            AND app_case_device.province LIKE CONCAT('%',#{province,jdbcType=VARCHAR},'%')
        </if>
        <if test="executeStatus != null ">
            AND app_case_device.pass_status =#{executeStatus,jdbcType=INTEGER}
        </if>
        <if test="passStatus != null ">
                AND app_case_device.execute_status =#{passStatus,jdbcType=INTEGER}
        </if>
        ORDER BY app_case_device.id DESC
    </select>
    <select id="findstep" resultType="com.cmit.testing.entity.vo.RecordStepVO" parameterType="com.cmit.testing.entity.vo.RecordStepVO">
        SELECT
        rs.case_result_id as testCaseReportId,
        c.case_name testcastName,
        '1' as type ,
        (SELECT script_name FROM app_script as script WHERE script.script_id = c.script_id ) as scriptName,
        cd.execute_num as excuteNum,
        cd.tel_num as phoneNum,
        rs.step_no as step,
        rs.step_desc as remark ,
        rs.consume_time as consumeTime,
        rs.result as stepResult,
        rs.screenshot_url as screenShotUrl,
        rs.command as paramName
        FROM
        app_record_step as rs
        LEFT JOIN app_case_result as r on r.result_id = rs.case_result_id
        LEFT JOIN app_case as c on c.case_id = r.case_id
        LEFT JOIN app_case_device as cd on ( cd.case_id = c.case_id AND cd.device_id = r.device_id)

        <where>
            <if test="excuteNum != null and excuteNum !=''">
              and cd.execute_num=#{excuteNum}
            </if>
           <if test="testcastName != null and testcastName !=''">
               and c.case_name LIKE CONCAT('%',#{testcastName},'%')
           </if>
          <if test=" phoneNum!= null and phoneNum !=''">
              and cd.tel_num LIKE CONCAT('%',#{phoneNum},'%')
          </if>
            <if test=" testCaseReportId!= null and testCaseReportId !=''">
                and  r.result_id=#{testCaseReportId}
            </if>
        </where>
    </select>
<delete id="DelTestList" parameterType="java.lang.Integer">
    delete from app_case_device
    where case_id in(select case_id from app_case_result where result_id in
    <foreach close=")" collection="ids" item="testCaseReportId" open="(" separator=",">
    #{testCaseReportId, jdbcType=INTEGER}
    </foreach>
    )
</delete>

    <!--查询App侧，所有的报告总数，缺陷报告数-->
    <select id="queryAppResultCount" resultType="java.util.Map">
        SELECT
          COUNT(1) AS 'resultCount',
          COUNT(IF(pass_status = 1, TRUE, NULL)) AS 'bugResultCount'
        FROM app_case_result
    </select>

    <select id="queryCaseBugCount" resultType="java.lang.Integer" >
        SELECT COUNT(1) FROM app_case_result WHERE pass_status = 1
</select>
    <resultMap id="stepReportMap" type="com.cmit.testing.entity.vo.StepReportVO" >
        <result column="step" property="step" jdbcType="VARCHAR" />
        <result column="command" property="command" jdbcType="VARCHAR" />
        <result column="param_name" property="paramName" jdbcType="VARCHAR" />
        <result column="remark" property="remark" jdbcType="VARCHAR" />
        <result column="avg_consume_time" property="avgConsumeTime" jdbcType="VARCHAR" />
        <result column="screenshot_url" property="screenshotUrl" jdbcType="VARCHAR" />
    </resultMap>

    <select id="appCaseStepReport" resultMap="stepReportMap">
        SELECT
        b.step_no as step ,b.action_type as param_name ,a.step_desc as  remark,convert(a.avg_consume_time,decimal) avg_consume_time
        FROM (
        SELECT app_record_step.step_no,AVG(app_record_step.consume_time) AS avg_consume_time,
        app_record_step.step_desc
        FROM app_record_step
        LEFT JOIN app_case_result  ON app_record_step.case_result_id = app_case_result.result_id
        LEFT JOIN app_case ON app_case_result.case_id = app_case.case_id
        LEFT JOIN app_case_device ON app_case.case_id=app_case_device.case_id
        WHERE app_case.old_case_id =#{caseId} AND survey_task_id = #{surveyTaskId}
         and app_case_result.pass_status = 0
        <if test="province!=null and province!=''" >
            AND app_case_device.province = #{province}
        </if>
        GROUP BY app_record_step.step_no,app_record_step.step_desc
        ) a LEFT JOIN (
        SELECT a.*
        FROM app_script_step a
        LEFT JOIN app_case b ON a.script_id = b.script_id
        WHERE b.case_id = #{caseId}
        ) b ON a.step_no = b.step_no
    </select>

    <select id="getResultIdsByCaseIds" parameterType="java.util.List" resultType="java.lang.Integer">
        SELECT result_id FROM app_case_result WHERE case_id IN
        <foreach close=")" collection="caseIds" item="caseId" open="(" separator=",">
            #{caseId,jdbcType=INTEGER}
        </foreach>
    </select>

    <select id="getProvinceByAppCaseIds" parameterType="java.util.List" resultType="java.lang.String">
        select DISTINCT(province)
        from app_case_result tr  LEFT JOIN app_case_device tc on tr.case_id = tc.case_id
        LEFT JOIN app_case ON app_case.case_id=tc.case_id
        WHERE  app_case.old_case_id in
        <foreach close=")" collection="caseIds" item="caseId" open="(" separator=",">
            #{caseId,jdbcType=INTEGER}
        </foreach>
        and  app_case.survey_task_id is NOT NULL
    </select>
    <!--众测任务相关的SQL-->
    <resultMap id="AppReportMap" type="com.cmit.testing.entity.vo.SurveyTaskReportVO">
        <result column="success_rote" property="successRote" jdbcType="VARCHAR"/>
        <result column="survey_task_id" property="surveyTaskId" jdbcType="INTEGER" />
        <result column="score" property="score" jdbcType="VARCHAR"/>
        <result column="source" property="source" jdbcType="INTEGER"/>
        <result column="case_id" property="testcaseId" jdbcType="INTEGER"/>
        <result column="testcase_name" property="testcaseName" jdbcType="VARCHAR"/>
        <result column="avg_click_num" property="avgClickNum" jdbcType="VARCHAR"/>
        <result column="click_score" property="clickScore" jdbcType="VARCHAR"/>
        <result column="avg_input_num" property="avgInputNum" jdbcType="VARCHAR"/>
        <result column="input_score" property="inputScore" jdbcType="VARCHAR"/>
        <result column="avg_consume_time" property="avgConsumeTime" jdbcType="VARCHAR"/>
        <result column="consume_time_score" property="consumeTimeScore" jdbcType="VARCHAR"/>
        <result column="avg_msg_consume_time" property="avgMsgConsumeTime" jdbcType="VARCHAR"/>
        <result column="msg_consume_time_score" property="msgConsumeTimeScore" jdbcType="VARCHAR"/>
        <result column="province" property="province" jdbcType="VARCHAR"/>
    </resultMap>
    <select id="appCaseReportList" resultMap="AppReportMap">
        SELECT
        a.*,
        IFNULL((SELECT score FROM app_survey_task_score WHERE testcase_id = a.case_id AND survey_task_id = a.survey_task_id AND type = 2 AND ( a.avg_click_num > CAST( `start` AS DECIMAL) OR `start` = 0 ) AND ( `end` IS NULL OR a.avg_click_num <![CDATA[ <= ]]> CAST( `end` AS DECIMAL) ) LIMIT 1 ),100) as 'click_score',
        IFNULL((SELECT score FROM app_survey_task_score WHERE testcase_id = a.case_id AND survey_task_id = a.survey_task_id AND type = 3 AND ( a.avg_input_num > CAST( `start` AS DECIMAL) OR `start` = 0 ) AND ( `end` IS NULL OR a.avg_input_num <![CDATA[ <= ]]> CAST( `end` AS DECIMAL) ) LIMIT 1), 100) as 'input_score',
        IFNULL((SELECT score FROM app_survey_task_score WHERE testcase_id = a.case_id AND survey_task_id = a.survey_task_id AND type = 4 AND ( a.avg_msg_consume_time > CAST( `start` AS DECIMAL) OR `start` = 0 ) AND ( `end` IS NULL OR a.avg_msg_consume_time <![CDATA[ <= ]]> CAST( `end` AS DECIMAL) ) LIMIT 1), 100) as 'msg_consume_time_score',
        IFNULL((SELECT score FROM app_survey_task_score WHERE testcase_id = a.case_id AND survey_task_id = a.survey_task_id AND type = 1 AND ( a.avg_consume_time > CAST( `start` AS DECIMAL) OR `start` = 0 ) AND ( `end` IS NULL OR a.avg_consume_time <![CDATA[ <= ]]> CAST( `end` AS DECIMAL) ) LIMIT 1), 100) as 'consume_time_score',
        success_rote AS 'score',
        1 as 'source'
        FROM
        (
        SELECT
        c.old_case_id as 'case_id',
        c.case_name as 'testcase_name',
        c.survey_task_id,
        (0+CAST(IFNULL(a.avg_click_num, 0) AS CHAR)) as 'avg_click_num',
        (0+CAST(IFNULL(a.avg_input_num, 0)AS CHAR)) as 'avg_input_num',
        (0+CAST(IFNULL(a.avg_msg_consume_time, 0)AS CHAR)) as 'avg_msg_consume_time',
        (0+CAST(IFNULL(a.avg_consume_time, 0)AS CHAR)) as 'avg_consume_time',
        (0+CAST(IFNULL(b.success_rote, 0)AS CHAR)) as 'success_rote'
        FROM app_case as c
        LEFT JOIN
        (
        SELECT
        a.success_num / ( a.success_num + a.failure_num ) * 100 as 'success_rote',
        a.case_id,
        survey_task_id
        FROM
        (
        SELECT
        SUM( CASE a.pass_status WHEN 0 THEN 1 ELSE 0 END ) as 'success_num',
        SUM( CASE a.pass_status WHEN 1 THEN 1 ELSE 0 END ) as 'failure_num',
        b.old_case_id as 'case_id',
        b.survey_task_id
        FROM
        app_case_result as a
        LEFT JOIN app_case_device AS d ON d.id = a.execute_id
        LEFT JOIN app_case as b on b.case_id = a.case_id
        WHERE
        b.survey_task_id = #{surveyTaskId, jdbcType=INTEGER}
        <if test="province != null and province != ''">
            AND d.province like concat('%',#{province, jdbcType=VARCHAR},'%')
        </if>
        GROUP BY
        b.case_id
        ) as a
        ) as b on c.old_case_id = b.case_id
        LEFT JOIN
        (
        SELECT
        b.old_case_id as 'case_id',
        AVG( click_num ) as 'avg_click_num',-- 点击数
        AVG( input_num ) as 'avg_input_num',-- 输入数
        AVG( consume_time ) / 1000 as 'avg_consume_time',-- 总耗时
        avg( ( SELECT avg( consume_time ) FROM app_record_step WHERE command = 'smsVerify' GROUP BY case_result_id HAVING case_result_id = a.result_id ) ) / 1000 as 'avg_msg_consume_time' -- 短信送达耗时
        FROM
        app_case_result a
        LEFT JOIN app_case_device AS d ON d.id = a.execute_id
        LEFT JOIN app_case as b on b.case_id = a.case_id
        WHERE
        a.pass_status = 0
         AND b.survey_task_id = #{surveyTaskId, jdbcType=INTEGER}

        GROUP BY b.old_case_id
        HAVING b.old_case_id != 0
        )  a on a.case_id = b.case_id
        WHERE 1=1
        AND c.survey_task_id = #{surveyTaskId, jdbcType=INTEGER}
        )  a
        WHERE 1=1
        <if test="appCaseIdList!=null and appCaseIdList.size>0" >
            AND a.case_id IN
            <foreach collection="appCaseIdList" open="(" close=")" separator="," item="caseId">
                #{caseId}
            </foreach>
        </if>
    </select>


    <!--批量下载截图，压缩成zip包文件-->
    <resultMap id="CommonResultMap" type="com.cmit.testing.entity.vo.CommonResultVO">
        <id column="caseResultId" property="caseResultId" jdbcType="INTEGER" />
        <result column="projectName" property="projectName" jdbcType="VARCHAR" />
        <result column="businessName" property="businessName" jdbcType="VARCHAR" />
        <result column="scriptName" property="scriptName" jdbcType="VARCHAR" />
        <result column="telNum" property="telNum" jdbcType="VARCHAR" />
        <result column="deviceHost" property="deviceHost" jdbcType="VARCHAR" />
        <result column="executeTime" property="executeTime" jdbcType="TIMESTAMP" />
        <result column="caseId" property="caseId" jdbcType="VARCHAR" />
        <result column="serialNumber" property="serialNumber" jdbcType="VARCHAR" />
        <result column="caseName" property="caseName" jdbcType="VARCHAR" />
        <result column="province" property="province" jdbcType="VARCHAR" />
        <result column="executeNum" property="executeNum" jdbcType="INTEGER" />
        <result column="executeResult" property="executeResult" jdbcType="VARCHAR" />
        <result column="passStatus" property="passStatus" jdbcType="VARCHAR" />
        <result column="screenshotUrl" property="screenshotUrl" jdbcType="VARCHAR" />
        <result column="recordVideoUrl" property="recordVideoUrl" jdbcType="VARCHAR" />
        <result column="logUrl" property="logUrl" jdbcType="VARCHAR" />
        <result column="defectDesc" property="defectDesc" jdbcType="LONGVARCHAR" />
        <result column="isFinish" property="isFinish" jdbcType="VARCHAR" />
        <result column="type" property="type" jdbcType="VARCHAR"/>
        <collection property="recordStepList" ofType="com.cmit.testing.entity.app.AppRecordStep">
            <id column="id" property="id" jdbcType="INTEGER"/>
            <result column="stepNo" property="stepNo"/>
            <result column="stepShotUrl" property="screenShotUrl" jdbcType="VARCHAR"/>
            <result column="result" property="result" jdbcType="INTEGER"/>
            <result column="command" property="command" jdbcType="VARCHAR"/>
        </collection>
    </resultMap>
    <select id="getDownloadZipFileInfo" resultMap="CommonResultMap" parameterType="com.cmit.testing.entity.vo.CommonResultVO">
        SELECT
            e.NAME AS 'businessName',
            p.NAME AS 'projectName',
            a.case_id AS 'copyCaseId',
            b.case_id AS 'caseId',
            b.case_num AS 'serialNumber',
            b.case_name AS 'caseName',
            c.execute_num AS 'executeNum',
            c.tel_num AS 'telNum',
            c.province AS 'province',
            dev.device_brand AS 'deviceHost',
            d.pass_status AS 'passStatus',
            d.execute_result AS 'executeResult',
            c.execute_time AS 'executeTime',
            d.result_id AS 'caseResultId',
            d.is_finish AS 'isFinish',
            d.log_url AS 'logUrl',
            d.screenshot_url AS 'screenshotUrl',
            d.record_video_url AS 'recordVideoUrl',
            d.pass_status AS 'passStatus',
            d.defect_desc AS 'defectDesc',
            f.script_name AS 'scriptName',
            "app" AS 'type',
            s.id,
            s.step_no AS 'stepNo',
            s.result,
            s.screenshot_url AS 'stepShotUrl',
            s.command
        FROM
            ( SELECT * FROM app_case WHERE old_case_id != 0 ) AS a
            LEFT JOIN
            (
              SELECT * FROM app_case WHERE old_case_id = 0
              <if test="caseName != null and caseName != ''">
                  AND case_name LIKE CONCAT('%', #{caseName},'%')
              </if>
            ) AS b ON b.case_id = a.old_case_id
            LEFT JOIN app_case_device AS c ON c.case_id = a.case_id
            LEFT JOIN app_device AS dev ON dev.device_id = c.device_id
            LEFT JOIN app_case_result AS d ON d.execute_id = c.id
            LEFT JOIN business AS e ON e.id = b.business_id
            LEFT JOIN project AS p ON p.id = e.project_id
            LEFT JOIN app_script AS f ON f.script_id = b.script_id
            LEFT JOIN app_record_step AS s ON s.case_result_id = d.result_id
        WHERE 1=1
            AND d.result_id IS NOT NULL
        <if test="businessName != null and businessName != ''" >
            AND e.NAME LIKE CONCAT('%', #{businessName},'%')
        </if>
        <if test="caseName != null and caseName != ''">
            AND b.case_name LIKE CONCAT('%', #{caseName},'%')
        </if>
        <if test="caseId != null">
            AND b.case_id = #{caseId}
        </if>
        <if test="province != null and province !=''" >
            AND c.province LIKE CONCAT('%',#{province},'%')
        </if>
        <if test="executeResult != null and executeResult != ''" >
            AND d.execute_result = #{executeResult}
        </if>
        <if test="executeNum != null and executeNum !=''" >
            AND c.execute_num = #{executeNum}
        </if>
        <if test="ids != null and ids.size() > 0">
            AND d.result_id IN
            <foreach collection="ids" item="id" open="(" close=")" separator=",">
                #{id}
            </foreach>
        </if>
        <if test="telNum != null and telNum != ''">
            AND c.tel_num = #{telNum}
        </if>
    </select>
    <sql id="date_Column_List" >
    result_id, execute_id, a.case_id, a.device_id, log_url, a.is_finish,a.execute_result, a.pass_status, screenshot_url, record_video_url,
    result_url ,click_num,input_num,consume_time,defect_desc
    </sql>
    <select id="getTestAppCaseReportByFewDays" resultMap="BaseResultMap">
        select   <include refid="date_Column_List"/>
        FROM   app_case_result a LEFT JOIN app_case_device b ON b.id=a.execute_id
        WHERE #{date} >= DATE_ADD(b.execute_time,INTERVAL #{day} DAY)
    </select>

</mapper>