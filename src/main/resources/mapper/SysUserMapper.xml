<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.cmit.testing.dao.SysUserMapper">
  <resultMap id="BaseResultMap" type="com.cmit.testing.entity.SysUser">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="create_by" jdbcType="VARCHAR" property="createBy" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="update_by" jdbcType="VARCHAR" property="updateBy" />
    <result column="avatar" jdbcType="VARCHAR" property="avatar" />
    <result column="account" jdbcType="VARCHAR" property="account" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="salt" jdbcType="VARCHAR" property="salt" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="birthday" jdbcType="TIMESTAMP" property="birthday" />
    <result column="secret_key" jdbcType="INTEGER" property="secretKey" />
    <result column="email" jdbcType="VARCHAR" property="email" />
    <result column="phone" jdbcType="VARCHAR" property="phone" />
    <result column="deptid" jdbcType="INTEGER" property="deptid" />
    <result column="status" jdbcType="INTEGER" property="status" />
  </resultMap>
  <sql id="Base_Column_List">
    id, create_time, create_by, update_time, update_by, avatar, account, password, salt,
    name, birthday, secret_key, email, phone, deptid, status
  </sql>

  <select id="findByPage" parameterType="java.lang.String" resultMap="BaseResultMap">
    SELECT
    su.*, group_concat(sr. NAME) as roleNames,
    group_concat(sr.id) as roleIds
    FROM
    sys_user su
    LEFT JOIN sys_user_role sur ON su.id = sur.user_id
    LEFT JOIN sys_role sr ON sr.id = sur.role_id
    WHERE 1=1
    <if test="userName != null and userName != ''">
      AND su.name LIKE CONCAT('%', #{userName}, '%')
    </if>
    <if test="roleName != null and roleName != ''">
      AND sr.name LIKE CONCAT('%', #{roleName}, '%')
    </if>
    GROUP BY su.id
  </select>

  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    SELECT
      su.*, group_concat(sr. NAME) roleNames,
            group_concat(sr.id) roleIds
    FROM
      sys_user su
      LEFT JOIN sys_user_role sur ON su.id = sur.user_id
      LEFT JOIN sys_role sr ON sr.id = sur.role_id
    where su.id = #{id,jdbcType=INTEGER}
    GROUP BY su.id
  </select>
  <select id="getSysUserByAccountOrNameAndId"  resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from sys_user
    where 1=1
    <if test="account != null and account != '' and name != null and name != ''">
      AND (account = #{account,jdbcType=VARCHAR}OR name = #{name,jdbcType=VARCHAR})
    </if>
    <if test="name != null and name != '' and (account == null or account == '')">
      and name = #{name,jdbcType=VARCHAR}
    </if>
    <if test="account != null and account != '' and (name == null or name == '')">
      and account = #{account,jdbcType=VARCHAR}
    </if>
    <if test="id != null and id != ''">
      AND id != #{id,jdbcType=INTEGER}
    </if>
  </select>

  <select id="getSysUserByRoleIds"  resultType="com.cmit.testing.entity.SysUser" parameterType="java.lang.Integer">
  select DISTINCT(su.id),su.create_time as createTime, su.create_by as createBy, su.update_time as updateTime, su.update_by as updateBy, su.avatar, account, password, salt,
    su.name, su.birthday, su.secret_key as secretKey, su.email, su.phone, su.deptid, su.status
  from sys_user su join sys_user_role sur on su.id = sur.user_id
  where 1=1 and sur.role_id in
    <foreach item="roleId" collection="roleIds" open="(" close=")" separator=",">
      #{roleId,jdbcType=INTEGER}
    </foreach>
  </select>

  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from sys_user
    where id = #{id,jdbcType=INTEGER}
  </delete>

  <delete id="deleteByIds" parameterType="java.util.List">
    delete from sys_user
    where id in
    <foreach item="id" collection="ids" open="(" close=")" separator=",">
      #{id,jdbcType=INTEGER}
    </foreach>
  </delete>

  <insert id="insert" parameterType="com.cmit.testing.entity.SysUser" useGeneratedKeys="true" keyProperty="id">
    insert into sys_user (id, create_time, create_by,
                          update_time, update_by, avatar,
                          account, password, salt,
                          name, birthday, secret_key,
                          email, phone,
                          deptid, status)
    values (#{id,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}, #{createBy,jdbcType=VARCHAR},
                                    #{updateTime,jdbcType=TIMESTAMP}, #{updateBy,jdbcType=VARCHAR}, #{avatar,jdbcType=VARCHAR},
                                    #{account,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, #{salt,jdbcType=VARCHAR},
                                    #{name,jdbcType=VARCHAR}, #{birthday,jdbcType=TIMESTAMP}, #{secretKey,jdbcType=INTEGER},
            #{email,jdbcType=VARCHAR}, #{phone,jdbcType=VARCHAR},
            #{deptid,jdbcType=INTEGER}, #{status,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.cmit.testing.entity.SysUser">
    insert into sys_user
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="createBy != null">
        create_by,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="updateBy != null">
        update_by,
      </if>
      <if test="avatar != null">
        avatar,
      </if>
      <if test="account != null">
        account,
      </if>
      <if test="password != null">
        password,
      </if>
      <if test="salt != null">
        salt,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="birthday != null">
        birthday,
      </if>
      <if test="secretKey != null">
        secret_key,
      </if>
      <if test="email != null">
        email,
      </if>
      <if test="phone != null">
        phone,
      </if>
      <if test="deptid != null">
        deptid,
      </if>
      <if test="status != null">
        status,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createBy != null">
        #{createBy,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateBy != null">
        #{updateBy,jdbcType=VARCHAR},
      </if>
      <if test="avatar != null">
        #{avatar,jdbcType=VARCHAR},
      </if>
      <if test="account != null">
        #{account,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="salt != null">
        #{salt,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="birthday != null">
        #{birthday,jdbcType=TIMESTAMP},
      </if>
      <if test="secretKey != null">
        #{secretKey,jdbcType=INTEGER},
      </if>
      <if test="email != null">
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="phone != null">
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="deptid != null">
        #{deptid,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        #{status,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.cmit.testing.entity.SysUser">
    update sys_user
    <set>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createBy != null">
        create_by = #{createBy,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateBy != null">
        update_by = #{updateBy,jdbcType=VARCHAR},
      </if>
      <if test="avatar != null">
        avatar = #{avatar,jdbcType=VARCHAR},
      </if>
      <if test="account != null">
        account = #{account,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="salt != null">
        salt = #{salt,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="birthday != null">
        birthday = #{birthday,jdbcType=TIMESTAMP},
      </if>
      <if test="secretKey != null">
        secret_key = #{secretKey,jdbcType=INTEGER},
      </if>
      <if test="email != null">
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="phone != null">
        phone = #{phone,jdbcType=VARCHAR},
      </if>
      <if test="deptid != null">
        deptid = #{deptid,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.cmit.testing.entity.SysUser">
    update sys_user
    set create_time = #{createTime,jdbcType=TIMESTAMP},
      create_by = #{createBy,jdbcType=VARCHAR},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      update_by = #{updateBy,jdbcType=VARCHAR},
      avatar = #{avatar,jdbcType=VARCHAR},
      account = #{account,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      salt = #{salt,jdbcType=VARCHAR},
      name = #{name,jdbcType=VARCHAR},
      birthday = #{birthday,jdbcType=TIMESTAMP},
      secret_key = #{secretKey,jdbcType=INTEGER},
      email = #{email,jdbcType=VARCHAR},
      phone = #{phone,jdbcType=VARCHAR},
      deptid = #{deptid,jdbcType=INTEGER},
      status = #{status,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>

  <update id="unlock" parameterType="java.util.List">
    update sys_user
    set
    status = 0
    where id in
    <foreach item="userId" collection="userIds" open="(" close=")" separator=",">
      #{userId,jdbcType=INTEGER}
    </foreach >

  </update>
</mapper>